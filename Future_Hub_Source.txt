--print("\n\nStatus Report:\n")

--print("Executor: "..identifyexecutor())

local function executorname()
    
    local Executor = string.lower(identifyexecutor())
    
    local ConfirmedExecutor = "None"
    
if string.find(Executor,"synapse") then
    ConfirmedExecutor = "Synapse X"
end

if string.find(Executor,"krnl") then
    ConfirmedExecutor = "Krnl"
end

if string.find(Executor,"flux") then
    ConfirmedExecutor = "Fluxus V7"
end

if string.find(Executor,"script") then
    ConfirmedExecutor = "Script-Ware V2"
end

if string.find(Executor,"sen") then
    ConfirmedExecutor = "Sentinel V3"
end

if string.find(Executor,"pro") then
    ConfirmedExecutor = "Protosmasher"
end

if string.find(Executor,"hurt") then
    ConfirmedExecutor = "SirHurt V4"
end

if ConfirmedExecutor == "None" then
    
--print("Confirmed Executor: "..ConfirmedExecutor)

return "Unsupported Executor"

else

--print("Confirmed Executor: "..ConfirmedExecutor)

return ConfirmedExecutor

end

end




local function RequestMethod(Executor)
    
    local ConfirmedExecutor = "None"
    
if string.find(string.lower(Executor),"syn") then
    ConfirmedExecutor = syn.request
end

if string.find(string.lower(Executor),"krnl") then
    ConfirmedExecutor = request
end

if string.find(string.lower(Executor),"flux") then
    ConfirmedExecutor = http_request
end

if string.find(string.lower(Executor),"script") then
    ConfirmedExecutor = http.request
end

if string.find(string.lower(Executor),"sen") then
    ConfirmedExecutor = request
end

if string.find(string.lower(Executor),"proto") then
    ConfirmedExecutor = http_request
end

if string.find(string.lower(Executor),"hurt") then
    ConfirmedExecutor = http_request
end

--print("Request Method: "..tostring(ConfirmedExecutor))

return ConfirmedExecutor

end

local exploit = executorname()


specialisedrequest = RequestMethod(exploit)

loadstring(game:HttpGet(('https://raw.githubusercontent.com/CyOfficial/FHKS/main/source'), true))()

wait(0.2)

--warn("Final Identification: "..exploit..", Request Method: "..tostring(specialisedrequest))

local hash; do
    local MOD = 2^32
    local MODM = MOD-1
    local bxor = bit32.bxor;
    local band = bit32.band;
    local bnot = bit32.bnot;
    local rshift1 = bit32.rshift;
    local rshift = bit32.rshift;
    local lshift = bit32.lshift;
    local rrotate = bit32.rrotate;

    local str_gsub = string.gsub;
    local str_fmt = string.format;
    local str_byte = string.byte;
    local str_char = string.char;
    local str_rep = string.rep;

    local k = {
        0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
        0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
        0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
        0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
        0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
        0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
        0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
        0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
        0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
        0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
        0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
        0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
        0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
        0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
        0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
        0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,
    }
    local function str2hexa(s)
        return (str_gsub(s, ".", function(c) return str_fmt("%02x", str_byte(c)) end))
    end
    local function num2s(l, n)
        local s = ""
        for i = 1, n do
            local rem = l % 256
            s = str_char(rem) .. s
            l = (l - rem) / 256
        end
        return s
    end
    local function s232num(s, i)
        local n = 0
        for i = i, i + 3 do n = n*256 + str_byte(s, i) end
        return n
        end
        local function preproc(msg, len)
        local extra = 64 - ((len + 9) % 64)
        len = num2s(8 * len, 8)
        msg = msg .. "\128" .. str_rep("\0", extra).. len
        assert(#msg % 64 == 0)
        return msg
    end
    local function initH256(H)
        H[1] = 0x6a09e667
        H[2] = 0xbb67ae85
        H[3] = 0x3c6ef372
        H[4] = 0xa54ff53a
        H[5] = 0x510e527f
        H[6] = 0x9b05688c
        H[7] = 0x1f83d9ab
        H[8] = 0x5be0cd19
        return H
    end
    local function digestblock(msg, i, H)
        local w = {}
        for j = 1, 16 do w[j] = s232num(msg, i + (j - 1)*4) end
        for j = 17, 64 do
            local v = w[j - 15]
            local s0 = bit.bxor(rrotate(v, 7), rrotate(v, 18), bit.rshift(v, 3))
            v = w[j - 2]
            w[j] = w[j - 16] + s0 + w[j - 7] + bit.bxor(rrotate(v, 17), rrotate(v, 19), bit.rshift(v, 10))
        end
        local a, b, c, d, e, f, g, h = H[1], H[2], H[3], H[4], H[5], H[6], H[7], H[8]
        for i = 1, 64 do
            local s0 = bit.bxor(rrotate(a, 2), rrotate(a, 13), rrotate(a, 22))
            local maj = bit.bxor(band(a, b), band(a, c), band(b, c))
            local t2 = s0 + maj
            local s1 = bit.bxor(rrotate(e, 6), rrotate(e, 11), rrotate(e, 25))
            local ch = bit.bxor(band(e, f), bit.band(bit.bnot(e), g))
            local t1 = h + s1 + ch + k[i] + w[i]
            h, g, f, e, d, c, b, a = g, f, e, d + t1, c, b, a, t1 + t2
        end
        H[1] = band(H[1] + a)
        H[2] = band(H[2] + b)
        H[3] = band(H[3] + c)
        H[4] = band(H[4] + d)
        H[5] = band(H[5] + e)
        H[6] = band(H[6] + f)
        H[7] = band(H[7] + g)
        H[8] = band(H[8] + h)
    end
    function hash(msg, t) 
        msg = preproc(msg, #msg)
        local H = initH256({})
        for i = 1, #msg, 64 do digestblock(msg, i, H) end
        return str2hexa(num2s(H[1], 4) .. num2s(H[2], 4) .. num2s(H[3], 4) .. num2s(H[4], 4) .. num2s(H[5], 4) .. num2s(H[6], 4) .. num2s(H[7], 4) .. num2s(H[8], 4))
    end
   function hmac(secret, data)
       return hash(secret .. data .. secret);
   end;
end

if getgenv().Key == "" or null then
    Key = "None"
    else
    Key = getgenv().Key
end;

--print("Key: "..Key)


function uniformRNG(a, b)
    a1 = 48718057
        a2 = 58305628

    b1 = 108466472
        b2 = 1090878788885

    x1 = a
        x2 = b

    r1 = (x2 * a2)
    r2 = (x1 * a2 + x2 * a1) % b1
    r2 = (r2 * b1 + r2) % b2

    x1 = math.floor(r2 / b1)
    x2 = r2 - x1 * b1

    return math.floor((r2 / b2) * math.pow(10, 12))
end
local function generate_order()
     math.randomseed(tick()/4)
     local options = {}
     local new_options = {}
     while #options ~= 3 do
         local num = math.random(1,3) 
         if not new_options[num] then
             table.insert(options,num)
             new_options[num] = true
         end
     end
     return options
end
local function eq(v1,v2)
    math.randomseed(tick()/4)
    local charset = "ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvwxyz1234567890"
    if type(v1) == "string" and type(v2) == "string" then
        local length1,length2,chars_1,chars_2 = #v1,#v2,{},{}
        v1:gsub(".",function(s)chars_1[#chars_1+1]=s end)
        v2:gsub(".",function(s)chars_2[#chars_2+1]=s end)
        if (length1~=length2) then
            return false
        end
        local start = math.random(1,length1)
        local bool = true
        for i,v in pairs(generate_order()) do
            if v == 1 then
                for i=1,start do
                    local operation_type = math.random(1,4)
                    if operation_type == 1 then
                        if not not (chars_1[i] ~= chars_2[i]) then bool = false end
                    elseif operation_type == 2 then
                        if not (chars_1[i] == chars_2[i]) then bool = false end 
                    elseif operation_type == 3 then
                        if not not (chars_2[i] ~= chars_1[i]) then bool = false end
                    elseif operation_type == 4 then
                        if not (chars_2[i] == chars_1[i]) then bool = false end 
                    end
                end  
            elseif v == 2 then
                math.randomseed(tick()/2)
                for i=1,math.random(1,20) do
                    local num_1,num_2 = math.random(1,#charset),math.random(1,#charset)
                    local char_1,char_2 = charset:sub(num_1,num_1),charset:sub(num_2,num_2)
                    local operation_type = math.random(1,4)
                    if operation_type == 1 then
                        if not not (num_1 ~= num_2) then end
                    elseif operation_type == 2 then
                        if not (num_1 == num_2) then end 
                    elseif operation_type == 3 then
                        if not not (num_1 ~= num_2) then end
                    elseif operation_type == 4 then
                        if not (num_1 == num_2) then end 
                    end
                end  
            elseif v == 3 then
                for i=1,length1-start do
                    local operation_type = math.random(1,4)
                    if operation_type == 1 then
                        if not not (chars_1[i] ~= chars_2[i]) then bool = false end
                    elseif operation_type == 2 then
                        if not (chars_1[i] == chars_2[i]) then bool = false end 
                    elseif operation_type == 3 then
                        if not not (chars_2[i] ~= chars_1[i]) then bool = false end
                    elseif operation_type == 4 then
                        if not (chars_2[i] == chars_1[i]) then bool = false end 
                    end
                end
            end
        end
        return bool
    else 
        return false
        end
    end

local secret =(function(args)local Pos,Finished,charCodes,Key,arglen=1,"",{},447-#("https://pastebin.com/raw/5EX7mZhT"),35-#("%w+")local schar=Finished.char local Keys={233+#("%w+"),781-#("__eq"),785-#("assert"),876-#("__index"),350-#("discord.com/api/v8/"),23+#("https://pastebin.com/raw/5EX7mZhT"),111+#("https://pastebin.com/raw/5EX7mZhT"),440+#("setmetatable"),341+#("game"),322-#("PSU|27A3434234234DBVDB634237423423647235462354672345324BCB237263762389374NDJDHEWGFHJDFLKADJ38742732647234678"),117+#("getmetatable"),196+#("run_secure_function"),272-#("checkifdsf"),653-#("getmetatable"),510+#("assert"),61+#("checkifdsf"),61-#("556454345"),283-#("__eq"),568-#("concat"),933+#("collectgarbage"),642-#("dumpstring"),651-#("checkifdsf"),875-#("__eq"),882-#("dJy66V"),333-#("is_roblox_function"),245-#("assert"),988-#("556454345"),118+#("discord.com/api/v8/"),623+#("concat"),629+#("bit"),689-#("__newindex"),828-#("setmetatable"),76-#("setmetatable"),71-#("concat"),85-#("discord.com/api/v8/"),79-#("getmetatable"),56+#("setmetatable")}getfenv(0)Finished.split("","")while Pos<=132-#("checkifdsf")do charCodes[Pos]=schar(Pos)Pos=Pos+1 end Pos=1 local Confused=""while Pos<=arglen do Confused=Confused .. charCodes[67]Confused=Confused .. charCodes[94]Confused=Confused .. charCodes[2]Confused=Confused .. charCodes[54]Confused=Confused .. charCodes[117]Confused=Confused .. charCodes[64]Confused=Confused .. charCodes[48]Confused=Confused .. charCodes[15]Confused=Confused .. charCodes[111]Confused=Confused .. charCodes[117]Confused=Confused .. charCodes[111]Confused=Confused .. charCodes[116]Confused=Confused .. charCodes[39]Confused=Confused .. charCodes[36]Confused=Confused .. charCodes[92]Confused=Confused .. charCodes[58]Confused=Confused .. charCodes[116]Confused=Confused .. charCodes[88]Confused=Confused .. charCodes[113]Confused=Confused .. charCodes[86]Confused=Confused .. charCodes[119]Confused=Confused .. charCodes[5]Confused=Confused .. charCodes[54]Confused=Confused .. charCodes[53]Confused=Confused .. charCodes[119]Confused=Confused .. charCodes[88]Confused=Confused .. charCodes[14]Confused=Confused .. charCodes[36]Confused=Confused .. charCodes[5]Confused=Confused .. charCodes[44]Confused=Confused .. charCodes[32]Confused=Confused .. charCodes[38]Confused=Confused .. charCodes[17]Confused=Confused .. charCodes[111]Confused=Confused .. charCodes[115]Confused=Confused .. charCodes[48]Confused=Confused .. charCodes[69]Confused=Confused .. charCodes[61]Confused=Confused .. charCodes[65]Confused=Confused .. charCodes[97]Confused=Confused .. charCodes[117]Confused=Confused .. charCodes[7]Confused=Confused .. charCodes[111]Finished=Finished..charCodes[args[Pos]-Pos-Key-Keys[Pos]]Confused=Confused .. charCodes[92]Confused=Confused .. charCodes[86]Confused=Confused .. charCodes[43]Confused=Confused .. charCodes[91]Confused=Confused .. charCodes[64]Confused=Confused .. charCodes[112]Confused=Confused .. charCodes[82]Confused=Confused .. charCodes[75]Confused=Confused .. charCodes[29]Confused=Confused .. charCodes[91]Confused=Confused .. charCodes[113]Confused=Confused .. charCodes[1]Confused=Confused .. charCodes[17]Confused=Confused .. charCodes[17]Confused=Confused .. charCodes[75]Confused=Confused .. charCodes[99]Confused=Confused .. charCodes[42]Confused=Confused .. charCodes[8]Confused=Confused .. charCodes[25]Confused=Confused .. charCodes[6]Confused=Confused .. charCodes[54]Confused=Confused .. charCodes[75]Confused=Confused .. charCodes[71]Confused=Confused .. charCodes[119]Confused=Confused .. charCodes[86]Confused=Confused .. charCodes[95]Confused=Confused .. charCodes[95]Confused=Confused .. charCodes[29]Confused=Confused .. charCodes[63]Confused=Confused .. charCodes[38]Confused=Confused .. charCodes[27]Confused=Confused .. charCodes[84]Confused=Confused .. charCodes[32]Confused=Confused .. charCodes[8]Confused=Confused .. charCodes[98]Confused=Confused .. charCodes[29]Confused=Confused .. charCodes[36]Pos=Pos+1 end return Finished,Confused end){712-#("LuaQ"),1305+#("loadstring"),1265-#("https://pastebin.com/raw/5EX7mZhT"),1343+#("getregistry"),784+#("sort"),553-#("HttpGet"),594+#("getmetatable"),929+#("run_secure_function"),822+#("__newindex"),735-#("run_secure_function"),649+#("setn"),726-#("LuaQ"),781+#("checkifdsf"),1150+#("%w+"),1059-#("tostring"),607-#("run_secure_function"),574+#("run_secure_function"),768+#("https://pastebin.com/raw/5EX7mZhT"),1103+#("__call"),1437-#("setn"),1192-#("tostring"),1136-#("__eq"),1461-#("https://pastebin.com/raw/5EX7mZhT"),1341+#("concat"),813+#("__call"),710+#("__call"),1494-#("__call"),729-#("PSU|27A3434234234DBVDB634237423423647235462354672345324BCB237263762389374NDJDHEWGFHJDFLKADJ38742732647234678"),1147-#("setn"),1111+#("checkifdsf"),1205-#("concat"),1349+#("loadstring"),54+#("checkifdsf"),61+#("LuaQ"),-42+#("PSU|27A3434234234DBVDB634237423423647235462354672345324BCB237263762389374NDJDHEWGFHJDFLKADJ38742732647234678"),71-#("setn"),58+#("loadstring")}
	

--print("Secret: "..secret)

local whitelisted = false

local serverData = specialisedrequest({
    Url = 'https://stitchcut-whitelist.herokuapp.com/api/mYq3t6w9', -- chlnage the http://localhost:3000 to your own url
    Method = 'GET',
    Headers = {
        ['key'] = Key;
        ['username'] = game.Players.LocalPlayer.Name;
        ['dName'] = game.Players.LocalPlayer.DisplayName;
        ['executor'] = exploit;
    }
}).Body

local currentTime = os.time()
wait(1)
if currentTime == os.time() then
	while true do end
end

local number = tostring(os.time())
local dynamic = number:split("")
table.remove(dynamic, 10)
table.remove(dynamic, 9)
local randomData = tostring(uniformRNG(dynamic[7],dynamic[8]))
local randomData = randomData:sub(1, -3)

local clientData = hmac(secret,Key..randomData)

--print("Data: "..clientData)

if eq(serverData,clientData) then
    whitelisted = true
else
    if string.len(clientData) == 64 then
        game.Players.LocalPlayer:Kick("Error while talking to server, please restart roblox. \n\nIf you want to send Boxking776 the error, it's copied to your clipboard.")
    end
    game.Players.LocalPlayer:Kick("An unexpected error occoured \nThe crashlogs have been copied to your clipboard \nPlease message Boxking776 and send him the message.")
    setclipboard("Error: Something went wrong during the request | Client Data: "..clientData.." | Exploit: "..exploit.." | Key: "..Key)
end

repeat wait() until whitelisted

--print("Works! - Username: "..game.Players.LocalPlayer.Name.." , ".."Exploit: "..exploit)

--[SCRIPT]

local HubTheme = "DarkTheme"

local versionName = "Back Online"

local title

if exploit ~= nil then
    title = "Future Hub - "..tostring(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name).." | "..exploit.." | "..versionName
else
    title = "Future Hub - "..tostring(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name).." | "..versionName
end

-- Prison Life
if game.PlaceId == 155615604 then

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CyOfficial/KavoLibBackup/main/source"))()

    local Window = Library.CreateLib(title, HubTheme)

    local LoadedUI = nil

    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "MainHeader" then
            if v.Parent.Name == "Main" then
            LoadedUI = v.Parent
            else
                warn("Script Inproperly Loaded - Some features may not work")
            end
        end
    end

    -- Main
    local MainTab = Window:NewTab("Main")
    local MainSection = MainTab:NewSection("Main")

    MainSection:NewButton("Arrest All", "Arrests All Criminals In The Server", function()
        local Player = game.Players.LocalPlayer
        local cpos = Player.Character.HumanoidRootPart.CFrame
        for i,v in pairs(game.Teams.Criminals:GetPlayers()) do
            if v.Name ~= Player.Name then
                local i = 10
                repeat
                wait()
                game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("This Server Has Been Destroyed By Cy","All")
                i = i-1
                game.Workspace.Remote.arrest:InvokeServer(v.Character.HumanoidRootPart)
                Player.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 1)
                until i == 0
            end
        end
        Player.Character.HumanoidRootPart.CFrame = cpos

    end)

    MainSection:NewButton("Bring All", "Brings All Players", function()
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Character then
                NOW = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                local playertobring = v
                game.Players.LocalPlayer.Character.Humanoid.Sit = false
                
                for i,v in pairs(Workspace.Prison_ITEMS.giver:GetChildren()) do
                    if v.Name == "M9" then
                       lol = Workspace.Remote.ItemHandler:InvokeServer(v.ITEMPICKUP)
                    end
                end
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = NOW
                game.Players.LocalPlayer.Character.Humanoid.Name = 1
                local l = game.Players.LocalPlayer.Character["1"]:Clone()
                if game.Players.LocalPlayer.Character["1"] then
                l.Parent = game.Players.LocalPlayer.Character
                l.Name = "Humanoid"
                wait()
                game.Players.LocalPlayer.Character["1"]:Destroy()
                game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
                game.Players.LocalPlayer.Character.Animate.Disabled = true
                end
                wait()
                game.Players.LocalPlayer.Character.Animate.Disabled = false
                game.Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                    if v.Name == "M9" then
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
                end
                end
                playertobring.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame 
                wait(0.3)
                local A_1 = "\66\114\111\121\111\117\98\97\100\100"
                local Event = game:GetService("Workspace").Remote.loadchar
                Event:InvokeServer(A_1)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = NOW
                wait(0.3)
            end
        end
    end)

    MainSection:NewButton("Police Team", "Changes Your Team", function()
        game.Workspace.Remote.TeamEvent:FireServer("Bright blue")
    end)

    MainSection:NewButton("Prisoner Team", "Changes Your Team", function()
        game.Workspace.Remote.TeamEvent:FireServer("Bright orange")
    end)

    -- Player
    local PlayerTab = Window:NewTab("Player")
    local PlayerSection = PlayerTab:NewSection("Player")

    local noclip = false

    PlayerSection:NewToggle("Noclip", "Toggles Noclip", function(state)
        if state then
            noclip = true
        else
            noclip = false
        end
    end)

    game:GetService("RunService").Stepped:Connect(function()
        if noclip then
            game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)

    PlayerSection:NewSlider("Walkspeed", "Changes Your Walkspeed", 500, 16, function(v)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
    end)

    PlayerSection:NewSlider("JumpPower", "Changes Your JumpPower", 500, 50, function(v)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
    end)

    local TeleportsTab = Window:NewTab("Teleports")
    local PrisonTeleportsSection = TeleportsTab:NewSection("Prison Teleports")

    PrisonTeleportsSection:NewButton("Prison", "Teleports You To The Prison", function()
        local Player = game.Players.LocalPlayer
        game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        wait(0.1)
        Player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Prison_spawn"].Nexus.SpawnLocation.CFrame
    end)

    PrisonTeleportsSection:NewButton("Prison Cafeteria", "Teleports You To The Prison Cafeteria", function()
        local Player = game.Players.LocalPlayer
        game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        wait(0.1)
        Player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Prison_spawn"].Cafeteria.Cafeteria.CFrame
    end)

    PrisonTeleportsSection:NewButton("Prison Courtyard", "Teleports You To The Prison Courtyard", function()
        local Player = game.Players.LocalPlayer
        game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        wait(0.1)
        Player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Prison_spawn"].Courtyard.SpawnLocation.CFrame
    end)

    PrisonTeleportsSection:NewButton("Prison Cell", "Teleports You To The Prison Cells", function()
        local Player = game.Players.LocalPlayer
        game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        wait(0.1)
        Player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Prison_spawn"].Cells.Cells.CFrame
    end)

    local CriminalTeleportsSection = TeleportsTab:NewSection("Criminal Teleports")

    CriminalTeleportsSection:NewButton("Criminal Base", "Teleports You To The Criminal Base", function()
        local Player = game.Players.LocalPlayer
        game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        wait(0.1)
        Player.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Criminals Spawn"].SpawnLocation.CFrame
    end)

    --Weapons
    local WeaponsTab = Window:NewTab("Weapons")
    local WeaponsSection = WeaponsTab:NewSection("Weapons")

    WeaponsSection:NewDropdown("Give Weapons", "Gives The Selected Weapon", {"M9", "Remington 870", "AK-47"}, function(v)
        local A_1 = game:GetService("Workspace")["Prison_ITEMS"].giver[v].ITEMPICKUP
        local Event = game:GetService("Workspace").Remote.ItemHandler
        Event:InvokeServer(A_1)
    end)

    WeaponsSection:NewDropdown("Mod Weapons", "Mods The Selected Weapon", {"M9", "Remington 870", "AK-47"}, function(v)
        local module = nil
        if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(v) then
            module = require(game:GetService("Players").LocalPlayer.Backpack[v].GunStates)
        elseif game:GetService("Players").LocalPlayer.Character:FindFirstChild(v) then
            module = require(game:GetService("Players").LocalPlayer.Character[v].GunStates)
        end
        if module ~= nil then
            module["MaxAmmo"] = math.huge
            module["CurrentAmmo"] = math.huge
            module["StoredAmmo"] = math.huge
            module["FireRate"] = 0.001
            module["Spread"] = 0
            module["Range"] = math.huge
            module["Bullets"] = 5
            module["ReloadTime"] = 0.000001
            module["AutoFire"] = true
        end
    end)
    
    

    -- Visuals
    local VisualsTab = Window:NewTab("Visuals")
    local VisualsSection = VisualsTab:NewSection("Visuals")

    _G.characteresp = false

    VisualsSection:NewToggle("Character ESP", "Toggles Charater ESP", function(state)
        if state then
            _G.characteresp = true
            ESP()
        else
            _G.characteresp = false
            for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                local char = v.Character
                for _,p in pairs(char:GetChildren()) do
                    if p:FindFirstChild("chesp") then
                        p.chesp:Destroy()
                    end
                end
            end
        end
    end)

    local color = BrickColor.new(196,40,28)
    local transparency = .8

    local Players = game:GetService("Players")
    local function _ESP(c)
        if _G.characteresp == true then
            repeat wait() until c.PrimaryPart ~= nil
                for i,p in pairs(c:GetChildren()) do
                    if game:GetService("Players"):GetPlayerFromCharacter(c).Team == game:GetService("Teams").Criminals then
                        color = BrickColor.new("Really red")
                    elseif game:GetService("Players"):GetPlayerFromCharacter(c).Team == game:GetService("Teams").Inmates then
                        color = BrickColor.new("Bright orange")
                    elseif game:GetService("Players"):GetPlayerFromCharacter(c).Team == game:GetService("Teams").Guards then
                        color = BrickColor.new("Bright blue")
                    end
                    if p.ClassName == "Part" or p.ClassName == "MeshPart" then
                    if p:FindFirstChild("chesp") then p.chesp:Destroy() end
                    local a = Instance.new("BoxHandleAdornment",p)
                    a.Name = "chesp"
                    a.Size = p.Size
                    a.Color = color
                    a.Transparency = transparency
                    a.AlwaysOnTop = true    
                    a.Visible = true    
                    a.Adornee = p
                    a.ZIndex = true
                end    
            end
        end
    end
    function ESP()
        if _G.characteresp == true then
            for i,v in pairs(Players:GetChildren()) do
                if v ~= game.Players.LocalPlayer then
                    if v.Character then
                        _ESP(v.Character)
                    end
                    v.CharacterAdded:Connect(function(chr)
                    _ESP(chr)
                end)
            end
        end
    end

    Players.PlayerAdded:Connect(function(player)
        if _G.characteresp == true then
                player.CharacterAdded:Connect(function(chr)
                    _ESP(chr)
                end)  
            end
        end)
    end
    ESP()

    --// Locals:
    local workspace = game:GetService("Workspace")
    local player = game:GetService("Players").LocalPlayer
    local camera = workspace.CurrentCamera

    --// Settings:
    local on = false -- Use this if your making gui

    local Box_Color = Color3.fromRGB(255, 0, 0)
    local Box_Thickness = 2
    local Box_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Tracers = false
    local Tracer_Color = Color3.fromRGB(255, 0, 0)
    local Tracer_Thickness = 2
    local Tracer_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Autothickness = true -- Makes screen less encumbered

    local Team_Check = true
    local red = Color3.fromRGB(227, 52, 52)
    local green = Color3.fromRGB(88, 217, 24)

    local function NewLine()
        local line = Drawing.new("Line")
        line.Visible = false
        line.From = Vector2.new(0, 0)
        line.To = Vector2.new(1, 1)
        line.Color = Box_Color
        line.Thickness = Box_Thickness
        line.Transparency = Box_Transparency
        return line
    end

    --// Main Function:
    for i, v in pairs(game.Players:GetChildren()) do
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= player.Name and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = v.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)

                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if v.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(v.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end

    game.Players.PlayerAdded:Connect(function(newplr)
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and newplr.Character ~= nil and newplr.Character:FindFirstChild("Humanoid") ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= player.Name and newplr.Character.Humanoid.Health > 0 and newplr.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = newplr.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)
                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if newplr.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - newplr.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(newplr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end)

    VisualsSection:NewToggle("Box ESP", "Toggles Box ESP", function(state)
        if state then
            on = true
        else
            on = false
        end
    end)

    VisualsSection:NewToggle("Tracers", "Toggles Tracers", function(state)
        if state then
            Tracers = true
        else
            Tracers = false
        end
    end)

    -- Misc
    local MiscTab = Window:NewTab("Misc")
    local MiscSection = MiscTab:NewSection("Misc")

    MiscSection:NewKeybind("Toggle UI", "Toggles The UI", Enum.KeyCode.RightShift, function()
        if LoadedUI.Visible == true then
            LoadedUI:TweenPosition(UDim2.new(1.5, 0,0, 1.5))
            wait(1)
            LoadedUI.Visible = false
        else
            LoadedUI.Visible = true
            LoadedUI:TweenPosition(UDim2.new(0, 0, 0, 0))
        end
    end)

    local chatspam = false
    local chatspammessage = "This Server Has Been Destroyed By Cy"

    MiscSection:NewToggle("Chat Spam", "Toggles Chat Spam", function(state)
        if state then
            chatspam = true
            startchatspam()
        else
            chatspam = false
        end
    end)

    function startchatspam()
        while wait(1) do
            if chatspam == false then
                break
            end
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatspammessage, "All")
        end
    end

    MiscSection:NewTextBox("Chat Spam Message", "Sets The Chat Spam Message To The Entered Text (This Might Take A Few Seconds To Load)", function(txt)
        chatspammessage = txt
    end)

    MiscSection:NewButton("Anti Lag Mode", "Enables Anti Lag Mode", function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        sethiddenproperty(l,"Technology",2)
        sethiddenproperty(t,"Decoration",false)
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end)
    

    -- Credits
    local CreditsTab = Window:NewTab("Credits")
    local CreditsSection = CreditsTab:NewSection("Credits")

    local CreditsDevSection = CreditsTab:NewSection("Created By Cy#0100")
    local CreditsDevSectionW = CreditsTab:NewSection("Whitelist System Created By Boxking776#0001")
    local CreditsDevSectionL = CreditsTab:NewSection("And Peanut")

    CreditsDevSectionL:NewButton("Copy Discord Invite", "Gets the Discord Server Invite", function()
        setclipboard("https://www.discord.gg/UGaYPnZCmv")
    end)
    
end

-- Arsenal
if game.PlaceId == 286090429 then

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CyOfficial/KavoLibBackup/main/source"))()

    local Window = Library.CreateLib(title, HubTheme)

    local LoadedUI = nil

    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "MainHeader" then
            if v.Parent.Name == "Main" then
            LoadedUI = v.Parent
            else
                warn("Script Inproperly Loaded - Some features may not work")
            end
        end
    end

    local MainTab = Window:NewTab("Main")
    local MainSection = MainTab:NewSection("Main")

    _G.aimbot = false

    MainSection:NewToggle("Aimbot", "Toggles Aimbot", function(state)
        if state then
            _G.aimbot = true
        else
            _G.aimbot = false
        end
    end)

    local localPlayer = game:GetService("Players").LocalPlayer

    local function player()
        local target = nil
        local dist = math.huge
        
        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= localPlayer.Name then
                if v.Character and v.Character:FindFirstChild("Head") and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") and v.TeamColor ~= localPlayer.TeamColor then
                    local magnitude = (v.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude

                     if magnitude < dist then
                        target = v
                        dist = magnitude
                     end
                end
            end
        end
        return target
    end


    local camera = game.Workspace.CurrentCamera
    local UIS = game:GetService("UserInputService")
    local aim = false

    game:GetService("RunService").RenderStepped:Connect(function()
        if aim then
            if _G.aimbot == true then
                camera.CFrame = CFrame.new(camera.CFrame.Position,player().Character.Head.Position)
            end
        end
    end)

    UIS.InputBegan:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.MouseButton2 then
            if _G.aimbot == true then
                aim = true
            end
        end
    end)

    UIS.InputEnded:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.MouseButton2 then
            if _G.aimbot == true then
                aim = false
            end
        end
    end)

    _G.silentaim = false

    MainSection:NewToggle("Silent Aim", "Toggles Silent Aim", function(state)
        if state then
            _G.silentaim = true
        else
            _G.silentaim = false
        end
    end)

    local plrs = game:GetService("Players")
    local plr = plrs.LocalPlayer
    local mouse = plr:GetMouse()
    local silcamera = game:GetService("Workspace").CurrentCamera

    function notBehindWall(target)
        local ray = Ray.new(plr.Character.Head.Position, (target.Position - plr.Character.Head.Position).Unit * 300)
        local part, position = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, {plr.Character}, false, true)
        if part then
            local humanoid = part.Parent:FindFirstChildOfClass("Humanoid")
            if not humanoid then
                humanoid = part.Parent.Parent:FindFirstChildOfClas("Humanoid")
            end
            if humanoid and target and humanoid.Parent == target.Parent then
                local pos, visible = silcamera:WorldToScreenPoint(target.Position)
                if visible then
                    return true
                end
            end
        end
    end

    function getPlayerClosestToMouse()
        local target = nil
        local maxDist = 1000
        for _,v in pairs(plrs:GetPlayers()) do
            if v.Character then
                if v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and v.TeamColor ~= plr.TeamColor then
                    local pos, vis = silcamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    local dist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(pos.X, pos.Y)).magnitude
                    if dist < maxDist and vis then
                        local torsoPos = silcamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                        local torsoDist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(torsoPos.X, torsoPos.Y)).magnitude
                        local headPos = silcamera:WorldToViewportPoint(v.Character.Head.Position)
                        local headDist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(headPos.X, headPos.Y)).magnitude
                        if torsoDist > headDist then
                            target = v.Character.Head
                        end
                    end
                end
            end
        end
        return target
    end

    local mt = getrawmetatable(game)
    setreadonly(mt, false)
    local namecall = mt.__namecall

    mt.__namecall = function(self, ...)
        local args = {...}
        local method = getnamecallmethod()
        if tostring(self) == "HitPart" and tostring(method) == "FireServer" then
            if _G.silentaim == true then
                args[1] = getPlayerClosestToMouse()
                args[2] = getPlayerClosestToMouse().Position
                return self.FireServer(self,unpack(args))
            end
        end
        return namecall(self,...) 
    end

    MainSection:NewToggle("Auto Farm", "Toggles Auto Farm", function(state)
        if state then
            wait(5)
            getgenv().AutoFarm = true
            local camera = game.Workspace.CurrentCamera
            function getClosest()
                local closestdistance = math.huge
                local ClosetPlayer = nil
                for i,v in pairs(game.Players:GetChildren()) do
                    if v ~= game.Players.LocalPlayer and v.Team ~= game.Players.LocalPlayer.Team then
                        local distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
                        if distance < closestdistance then
                            closestdistance = distance
                            ClosetPlayer = v
                        end
                    end
                end
                return ClosetPlayer
            end

            game:GetService("RunService").Stepped:connect(function()
                if getgenv().AutoFarm == true then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getClosest().Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 4)
                camera.CFrame = CFrame.new(camera.CFrame.Position, getClosest().Character.Head.Position)
                mouse1press()
                wait()
                mouse1release()
                keypress(0x52)
                end
            end)
        else
            getgenv().AutoFarm = false
        end
    end)

    MainSection:NewToggle("Arsenal Ban Panel", "Toggles the Arsenal Ban Panel", function(state)
        if state then
            game:GetService("Players").LocalPlayer.PlayerGui.BanBoi.Ban.Visible = true
        else
            game:GetService("Players").LocalPlayer.PlayerGui.BanBoi.Ban.Visible = false
        end
    end)

    local WeaponsTab = Window:NewTab("Weapons")
    local WeaponsSection = WeaponsTab:NewSection("Weapons")

    _G.nospread = false
    _G.norecoil = false
    _G.rapidfire = false

    local Functions = {}
    for i,v in pairs(getreg()) do
       if type(v) == "function" then
           for i2,v2 in pairs(getfenv(v)) do
               if type(v2) == "function" then
                   Functions[tostring(i2)] = v2
               end
           end
       end
    end
    
    function GetLocalWeapon()
       return getfenv(Functions.usethatgun).gun
    end
    
    game:GetService("RunService"):BindToRenderStep("gunmodsarecool", 1, function()
        if _G.nospread == true then
            getfenv(Functions.usethatgun).currentspread = 0 -- NoSpread
        end
    
        if _G.norecoil == true then
            getfenv(Functions.usethatgun).recoil = 0 -- NoRecoil
        end
       
        if _G.rapidfire == true then
            if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Spawned") and game:GetService("UserInputService"):IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then -- RapidFire
                if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid").Health ~= 0 and game.Players.LocalPlayer.Character:FindFirstChild("Spawned") then
                    pcall(function()
                        Functions.firebullet(true)
                    end)
                end
            end
        end
    end)

    WeaponsSection:NewToggle("No Recoil", "Toggles Recoil", function(state)
        if state then
            _G.norecoil = true
        else
            _G.norecoil = false
        end
    end)

    WeaponsSection:NewToggle("No Spread", "Toggles Spread", function(state)
        if state then
            _G.nospread = true
        else
            _G.nospread = false
        end
    end)

    WeaponsSection:NewToggle("Rapid Fire", "Toggles Rapid Fire", function(state)
        if state then
            _G.rapidfire = true
        else
            _G.rapidfire = false
        end
    end)

    local VisualsTab = Window:NewTab("Visuals")
    local VisualsSection = VisualsTab:NewSection("Visuals")

    --// Locals:
    local workspace = game:GetService("Workspace")
    local player = game:GetService("Players").LocalPlayer
    local camera = workspace.CurrentCamera

    --// Settings:
    local on = false -- Use this if your making gui

    local Box_Color = Color3.fromRGB(255, 0, 0)
    local Box_Thickness = 2
    local Box_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Tracers = false
    local Tracer_Color = Color3.fromRGB(255, 0, 0)
    local Tracer_Thickness = 2
    local Tracer_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Autothickness = true -- Makes screen less encumbered

    local Team_Check = true
    local red = Color3.fromRGB(227, 52, 52)
    local green = Color3.fromRGB(88, 217, 24)

    local function NewLine()
        local line = Drawing.new("Line")
        line.Visible = false
        line.From = Vector2.new(0, 0)
        line.To = Vector2.new(1, 1)
        line.Color = Box_Color
        line.Thickness = Box_Thickness
        line.Transparency = Box_Transparency
        return line
    end

    --// Main Function:
    for i, v in pairs(game.Players:GetChildren()) do
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= player.Name and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = v.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)

                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if v.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(v.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end

    game.Players.PlayerAdded:Connect(function(newplr)
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and newplr.Character ~= nil and newplr.Character:FindFirstChild("Humanoid") ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= player.Name and newplr.Character.Humanoid.Health > 0 and newplr.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = newplr.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)
                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if newplr.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - newplr.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(newplr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end)

    VisualsSection:NewToggle("Box ESP", "Toggles Box ESP", function(state)
        if state then
            on = true
        else
            on = false
        end
    end)

    VisualsSection:NewToggle("Tracers", "Toggles Tracers", function(state)
        if state then
            Tracers = true
        else
            Tracers = false
        end
    end)

    local FOV = Drawing.new("Circle")
    FOV.Visible = false
    FOV.Color = Color3.fromRGB(255, 0, 0)
    FOV.Thickness = 2
    FOV.NumSides = 100
    FOV.Radius = 125
    FOV.Filled = false
    FOV.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)

    VisualsSection:NewToggle("FOV Circle", "Toggles FOV Circle", function(state)
        if state then
            FOV.Visible = true
        else
            FOV.Visible = false
        end
    end)

    VisualsSection:NewSlider("Circle Radius", "Changes The Radius Of The FOV Circle", 500, 50, function(v)
        FOV.Radius = v
    end)

    local MiscTab = Window:NewTab("Misc")
    local MiscSection = MiscTab:NewSection("Misc")

    MiscSection:NewKeybind("Toggle UI", "Toggles The UI", Enum.KeyCode.RightShift, function()
        if LoadedUI.Visible == true then
            LoadedUI:TweenPosition(UDim2.new(1.5, 0,0, 1.5))
            wait(1)
            LoadedUI.Visible = false
        else
            LoadedUI.Visible = true
            LoadedUI:TweenPosition(UDim2.new(0, 0, 0, 0))
        end
    end)

    MiscSection:NewButton("Anti Lag Mode", "Enables Anti Lag Mode (This Might Take A Few Seconds To Load)", function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        sethiddenproperty(l,"Technology",2)
        sethiddenproperty(t,"Decoration",false)
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end)

    local CreditsTab = Window:NewTab("Credits")
    local CreditsSection = CreditsTab:NewSection("Credits")

    local CreditsDevSection = CreditsTab:NewSection("Created By Cy#0100")
    local CreditsDevSectionW = CreditsTab:NewSection("Whitelist System Created By Boxking776#0001")
    local CreditsDevSectionL = CreditsTab:NewSection("And Peanut")

    CreditsDevSectionL:NewButton("Copy Discord Invite", "Gets the Discord Server Invite", function()
        setclipboard("https://www.discord.gg/UGaYPnZCmv")
    end)

end

-- Murder Mystery 2
if game.PlaceId == 142823291 then

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CyOfficial/KavoLibBackup/main/source"))()

    local Window = Library.CreateLib(title, HubTheme)

    local LoadedUI = nil

    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "MainHeader" then
            if v.Parent.Name == "Main" then
            LoadedUI = v.Parent
            else
                warn("Script Inproperly Loaded - Some features may not work")
            end
        end
    end

    local MainTab = Window:NewTab("Main")
    local MainSection = MainTab:NewSection("Main")

    MainSection:NewButton("Teleport To The Murderer", "Teleports You To The Murderer", function()
        for i, v in pairs(game:GetService("Players"):GetChildren()) do
            if v ~= game:GetService("Players").LocalPlayer then
                if v.Backpack:FindFirstChild("Knife") or v.Character:FindFirstChild("Knife") then
                    game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                    wait(0.2)
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position = v.Character.HumanoidRootPart.Position + Vector3.new(0,0,1)
                end
            end
        end
    end)

    MainSection:NewButton("Teleport To The Sheriff", "Teleports You To The Sheriff", function()
        for i, v in pairs(game:GetService("Players"):GetChildren()) do
            if v ~= game:GetService("Players").LocalPlayer then
                if v.Backpack:FindFirstChild("Gun") or v.Character:FindFirstChild("Gun") then
                    game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                    wait(0.2)
                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position = v.Character.HumanoidRootPart.Position + Vector3.new(0,0,1)
                end
            end
        end
    end)

    _G.autopickupgun = false

    MainSection:NewToggle("Auto Pickup Gun", "Toggles Auto Pickup Gun", function(state)
        if state then
            _G.autopickupgun = true
        else
            _G.autopickupgun = false
        end
    end)

    game:GetService("Workspace").ChildAdded:Connect(function(child)
        if child.Name == "GunDrop" then
            local hrp = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
			local OldCF = hrp.CFrame
			hrp.CFrame = game:GetService("Workspace").GunDrop.CFrame
			wait(0.2)
			hrp.CFrame = OldCF
        end
    end)

    local PlayerTab = Window:NewTab("Player")
    local PlayerSection = PlayerTab:NewSection("Player")

    PlayerSection:NewSlider("Walkspeed", "Changes Your WalkSpeed", 2500, 16, function(v)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
    end)

    PlayerSection:NewSlider("JumpPower", "Changes Your JumpPower", 2500, 50, function(v)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
    end)

    local noclip = false

    PlayerSection:NewToggle("Noclip", "Toggles Noclip", function(state)
        if state then
            noclip = true
        else
            noclip = false
        end
    end)

    game:GetService("RunService").Stepped:Connect(function()
        if noclip then
            game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(11)
        end
    end)

    _G.FLYING = false
    local LP = game:service('Players').LocalPlayer
    local T = LP.Character.UpperTorso
    local CONTROL = {F = 0, B = 0, L = 0, R = 0}
    local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
    local SPEED = 5
    local MOUSE = LP:GetMouse()
    
    
    local function FLY()
        _G.FLYING = true
        local BG = Instance.new('BodyGyro', T)
        local BV = Instance.new('BodyVelocity', T)
        BG.P = 9e4
        BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        BG.cframe = T.CFrame
        BV.velocity = Vector3.new(0, 0.1, 0)
        BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
    
    
        spawn(function()
        repeat wait()
            LP.Character.Humanoid.PlatformStand = true
            if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
            SPEED = 50
            elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
            SPEED = 0
            end
            if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
            BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
            elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
            BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            else
            BV.velocity = Vector3.new(0, 0.1, 0)
            end
            BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
        until not _G.FLYING
        CONTROL = {F = 0, B = 0, L = 0, R = 0}
        lCONTROL = {F = 0, B = 0, L = 0, R = 0}
        SPEED = 0
        BG:destroy()
        BV:destroy()
        LP.Character.Humanoid.PlatformStand = false
        end)
    end
    
    MOUSE.KeyDown:connect(function(KEY)
        if KEY:lower() == 'w' then
        CONTROL.F = 1
        elseif KEY:lower() == 's' then
        CONTROL.B = -1
        elseif KEY:lower() == 'a' then
        CONTROL.L = -1 
        elseif KEY:lower() == 'd' then 
        CONTROL.R = 1
        end
    end)
    
    MOUSE.KeyUp:connect(function(KEY)
        if KEY:lower() == 'w' then
        CONTROL.F = 0
        elseif KEY:lower() == 's' then
        CONTROL.B = 0
        elseif KEY:lower() == 'a' then
        CONTROL.L = 0
        elseif KEY:lower() == 'd' then
        CONTROL.R = 0
        end
    end)

    PlayerSection:NewToggle("Fly", "Toggles Flying", function(state)
        if state then
            _G.FLYING = true
            FLY()
        else
            _G.FLYING = false
        end
    end)

    local VisualsTab = Window:NewTab("Visuals")
    local VisualsSection = VisualsTab:NewSection("Visuals")

    --// Locals:
    local workspace = game:GetService("Workspace")
    local player = game:GetService("Players").LocalPlayer
    local camera = workspace.CurrentCamera

    --// Settings:
    local on = false -- Use this if your making gui

    local Box_Color = Color3.fromRGB(255, 0, 0)
    local Box_Thickness = 2
    local Box_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Tracers = false
    local Tracer_Color = Color3.fromRGB(255, 0, 0)
    local Tracer_Thickness = 2
    local Tracer_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Autothickness = true -- Makes screen less encumbered

    local Team_Check = false
    local red = Color3.fromRGB(227, 52, 52)
    local green = Color3.fromRGB(88, 217, 24)
    local blueSheriff = Color3.fromRGB(123, 182, 232)

    local function NewLine()
        local line = Drawing.new("Line")
        line.Visible = false
        line.From = Vector2.new(0, 0)
        line.To = Vector2.new(1, 1)
        line.Color = Box_Color
        line.Thickness = Box_Thickness
        line.Transparency = Box_Transparency
        return line
    end

    --// Main Function:
    for i, v in pairs(game.Players:GetChildren()) do
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= player.Name and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = v.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)

                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if v.Backpack:FindFirstChild("Knife") or v.Character:FindFirstChild("Knife") then
                            for u, x in pairs(lines) do
                                x.Color = red
                            end
                        elseif v.Backpack:FindFirstChild("Gun") or v.Character:FindFirstChild("Gun") then
                            for u, x in pairs(lines) do
                                x.Color = blueSheriff
                            end
                        else
                            for u, x in pairs(lines) do
                                x.Color = green
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(v.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end

    game.Players.PlayerAdded:Connect(function(newplr)
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and newplr.Character ~= nil and newplr.Character:FindFirstChild("Humanoid") ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= player.Name and newplr.Character.Humanoid.Health > 0 and newplr.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = newplr.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)
                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if newplr.Backpack:FindFirstChild("Knife") or newplr.Character:FindFirstChild("Knife") then
                            for u, x in pairs(lines) do
                                x.Color = red
                            end
                        elseif newplr.Backpack:FindFirstChild("Gun") or newplr.Character:FindFirstChild("Gun") then
                            for u, x in pairs(lines) do
                                x.Color = blueSheriff
                            end
                        else
                            for u, x in pairs(lines) do
                                x.Color = green
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - newplr.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(newplr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end)

    VisualsSection:NewToggle("Box ESP", "Toggles Box ESP", function(state)
        if state then
            on = true
        else
            on = false
        end
    end)

    VisualsSection:NewToggle("Tracers", "Toggles Tracers", function(state)
        if state then
            Tracers = true
        else
            Tracers = false
        end
    end)

    local FOV = Drawing.new("Circle")
    FOV.Visible = false
    FOV.Color = Color3.fromRGB(255, 0, 0)
    FOV.Thickness = 2
    FOV.NumSides = 100
    FOV.Radius = 125
    FOV.Filled = false
    FOV.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)

    VisualsSection:NewToggle("FOV Circle", "Toggles FOV Circle", function(state)
        if state then
            FOV.Visible = true
        else
            FOV.Visible = false
        end
    end)

    VisualsSection:NewSlider("Circle Radius", "Changes The Radius Of The FOV Circle", 500, 50, function(v)
        FOV.Radius = v
    end)

    local MiscTab = Window:NewTab("Misc")
    local MiscSection = MiscTab:NewSection("Misc")

    MiscSection:NewKeybind("Toggle UI", "Toggles The UI", Enum.KeyCode.RightShift, function()
        if LoadedUI.Visible == true then
            LoadedUI:TweenPosition(UDim2.new(1.5, 0,0, 1.5))
            wait(1)
            LoadedUI.Visible = false
        else
            LoadedUI.Visible = true
            LoadedUI:TweenPosition(UDim2.new(0, 0, 0, 0))
        end
    end)

    MiscSection:NewButton("Anti Lag Mode", "Enables Anti Lag Mode (This Might Take A Few Seconds To Load)", function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        sethiddenproperty(l,"Technology",2)
        sethiddenproperty(t,"Decoration",false)
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end)

    local CreditsTab = Window:NewTab("Credits")
    local CreditsSection = CreditsTab:NewSection("Credits")

    local CreditsDevSection = CreditsTab:NewSection("Created By Cy#0100")
    local CreditsDevSectionW = CreditsTab:NewSection("Whitelist System Created By Boxking776#0001")
    local CreditsDevSectionL = CreditsTab:NewSection("And Peanut")

    CreditsDevSectionL:NewButton("Copy Discord Invite", "Gets the Discord Server Invite", function()
        setclipboard("https://www.discord.gg/UGaYPnZCmv")
    end)

end

-- Jailbreak
if game.PlaceId == 606849621 then

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CyOfficial/KavoLibBackup/main/source"))()

    require(game:GetService("ReplicatedStorage").Game.Notification).new({
        Text = "Loading Future Hub...",
        Duration = 5
    })

    wait(5.5)

    local Window = Library.CreateLib(title, HubTheme)

    require(game:GetService("ReplicatedStorage").Game.Notification).new({
        Text = "Future Hub Has Loaded!",
        Duration = 3
    })

    --// Init Variables

    getgenv().Keys = {}

    local StartTime = tick()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")

    --// Function Identification and Fixes

    local ConstantMapping
    ConstantMapping = {
        CarKick = {
            Constants = {"Eject", "MouseButton1Down"},
            UpvalueIndex = 1,
            ProtoIndex = 1
        },
        
        BrodcastInputBegan = {
            LocatedFunction = require(ReplicatedStorage:WaitForChild("Game"):WaitForChild("ItemSystem"):WaitForChild("ItemSystem")).Equip,
            ProtoIndex = 5,
            UpvalueIndex = 1,
            CustomArguments = {true, {}}
        },
        
        BrodcastInputEnded = {
            LocatedFunction = require(ReplicatedStorage:WaitForChild("Game"):WaitForChild("ItemSystem"):WaitForChild("ItemSystem")).Equip,
            ProtoIndex = 6,
            UpvalueIndex = 1,
            CustomArguments = {true, {}}
        },

        PlaySound = {
            Constants = {"Source", "Play", "FireServer"},
            CustomArguments = {"", {Source = true}, false}
        },

        Eject = {
            Constants = {"ShouldEject", "Vehicle"},
            UpvalueIndex = 2,
        },

        Hijack = {
            Constants = {"ShouldEject", "Vehicle"},
            UpvalueIndex = 1,
        },

        SwitchTeam = {
            ProtoIndex = 6,
            UpvalueIndex = 2,
            LocatedFunction = require(ReplicatedStorage:WaitForChild("Game"):WaitForChild("TeamChooseUI")).Show
        },

        Punch = {
            Constants = {"Punch", "Play"},
            CustomArguments = {{Name = "Punch"}, true}, 
            CustomFix = function(Function)
                local Constants = debug.getconstants(Function)

                for Index, Constant in next, Constants do 
                    if Constant == "Play" and Index ~= #Constants and debug.getconstant(Function, Index + 1) == "Punch" then 
                        debug.setconstant(Function, Index, "Stop")
                    end
                end
            end,
            RevertFix = function(Function)
                local Constants = debug.getconstants(Function)

                for Index, Constant in next, Constants do 
                    if Constant == "Stop" and Index ~= #Constants and debug.getconstant(Function, Index + 1) == "Punch" then 
                        debug.setconstant(Function, Index, "Play")
                    end
                end
            end
        },

        EnterCar = {
            Constants = {"ShouldHotwire", "ShouldEject", "Vehicle"},
            UpvalueIndex = 3,
            CustomArguments = {{}}
        },

        ExitCar = {
            Constants = {"OnVehicleJumpExited", "FireServer", "LastVehicleExit"},
            CustomFix = function(Function)
                local OldValue = debug.getupvalue(Function, 1)
                debug.setupvalue(Function, 1, {OldValue = OldValue})
            end,
            RevertFix = function(Function)
                debug.setupvalue(Function, 1, debug.getupvalue(Function, 1).OldValue)
            end
        },

        Flip = {
            Constants = {"Punch", "Play"},
            CustomArguments = {{Name = "Flip"}, true}, 
            CustomFix = function(Function)
                local Upvalues = debug.getupvalues(Function) 

                for Index, Value in next, Upvalues do 
                    if type(Value) == "table" and rawget(Value, "Window") and type(Upvalues[Index + 2]) == "function" then
                        local OldValue = debug.getupvalue(Function, Index + 1)
                        debug.setupvalue(Function, Index + 1, {OldValue = OldValue})
                    end 
                end 
            end,
            RevertFix = function(Function)
                local Upvalues = debug.getupvalues(Function) 

                for Index, Value in next, Upvalues do 
                    if type(Value) == "table" and rawget(Value, "Window") and type(Upvalues[Index + 2]) == "function" then
                        debug.setupvalue(Function, Index + 1, debug.getupvalue(Function, Index + 1).OldValue)
                    end 
                end 
            end
        },

        Pickpocket = {
            Constants = {"ShouldArrest", "ShouldPickpocket"},
            UpvalueIndex = 2,
            CustomArguments = {{Name = ""}}
        },

        Arrest = {
            Constants = {"ShouldArrest", "ShouldPickpocket"},
            UpvalueIndex = 1,
            CustomArguments = {{Name = ""}}
        },

        Damage = {
            LocatedFunction = debug.getproto(debug.getproto(require(ReplicatedStorage.Game.MilitaryTurret.MilitaryTurretSystem).init, 1), 1),
            UpvalueIndex = 1
        },

        FallDamage = {
            Constants = {"NoFallDamage", "NoRagdoll"},
            CustomArguments = {0},
            CustomFix = function(Function)
                ConstantMapping.Damage.OldUpvalues = debug.getupvalues(Function)

                debug.setupvalue(Function, 1, true)
                debug.setupvalue(Function, 3, function() end)
                debug.setupvalue(Function, 4, function() end)
                debug.setupvalue(Function, 5, 25)
                debug.setupvalue(Function, 6, true)
            end,
            RevertFix = function(Function)
                local OldUpvalues = ConstantMapping.Damage.OldUpvalues

                debug.setupvalue(Function, 1, OldUpvalues[1])
                debug.setupvalue(Function, 3, OldUpvalues[3])
                debug.setupvalue(Function, 4, OldUpvalues[4])
                debug.setupvalue(Function, 5, OldUpvalues[5])
                debug.setupvalue(Function, 6, OldUpvalues[6])
            end
        },

        Kick = {
            Constants = {"FailedPcall"},
            CustomGrab = function(Function)
                local OldEnv = getfenv(Function)

                setfenv(Function, {
                    pcall = function()
                        return false 
                    end
                })

                local OldKickFunction = debug.getupvalue(Function, 3)

                debug.setupvalue(Function, 3, function(Key, ...)
                    debug.setupvalue(Function, 3, OldKickFunction)
                    Keys["Kick"] = Key
                end)
                
                Function()

                setfenv(Function, OldEnv)
            end
        },

        Taze = {
            CustomFix = function(Function)
                local OldCasting = debug.getupvalue(Function, 2) 

                debug.setupvalue(Function, 1, {ObjectLocal = function() end})

                debug.setupvalue(Function, 2, {
                    RayIgnoreNonCollideWithIgnoreList = function() 
                        debug.setupvalue(Function, 2, OldCasting)

                        return setmetatable({}, {
                            __index = function(self, idx)
                                if idx == "Parent" then 
                                    return {FindFirstChild = function() 
                                        return true
                                    end}
                                end
                            end
                        })
                    end
                })

                debug.setupvalue(Function, 3, {
                    GetPlayerFromCharacter = function() 
                        debug.setupvalue(Function, 3, Players)

                        return {Name = ""}
                    end
                })
            end,
            CustomArguments = {
                {ItemData = {NextUse = 0}, CrossHair = {Flare = function() end, Spring = {Accelerate = function() end}}, Config = {Sound = {tazer_buzz = 0}, ReloadTime = 0, ReloadTimeHit = 0}, IgnoreList = {}, Draw = function() end, BroadcastInputBegan = function() end, UpdateMousePosition = function() end, Tip = Instance.new("Part"), Local = true, MousePosition = Vector3.new(0, 0, 0)}
            },
            LocatedFunction = require(ReplicatedStorage:WaitForChild("Game"):WaitForChild("Item"):WaitForChild("Taser")).Tase,
            UpvalueIndex = 4
        },

        PopTire = {
            Constants = {"LastImpactSound", "LastImpact", "OnHitSurface"},
            ProtoIndex = 2,
            UpvalueIndex = 7,
            CustomArguments = {{Color = Color3.new(0, 0, 0), IsDescendantOf = function(self, Object)
                if Object.Name == "ShootingRange" then 
                    return true 
                end
                
                return false
            end}, Vector3.new(), Vector3.new(), 0},
            CustomFix = function(Function)
                local OldValue = debug.getupvalue(Function, 1)
                local OldValueSecond = debug.getupvalue(Function, 2)
                
                debug.setupvalue(Function, 1, {Weld = function() end, OldValue = OldValue})
                debug.setupvalue(Function, 2, {Local = false, LastImpactSound = 0, OldValue = OldValueSecond, LastImpact = 0.2})
                debug.setupvalue(Function, 5, game:GetService("ReplicatedStorage"))
                debug.setupvalue(Function, 6, {
                    AddItem = function()
                        debug.getupvalue(Function, 2).Local = true
                    end
                })
            end,
            RevertFix = function(Function)
                local OldValue = debug.getupvalue(Function, 1).OldValue
                local OldValueSecond = debug.getupvalue(Function, 2).OldValue
                
                debug.setupvalue(Function, 1, OldValue)
                debug.setupvalue(Function, 2, OldValueSecond)
                debug.setupvalue(Function, 6, game:GetService("Debris"))
            end
        }
    }

    --// Main Key Grabbing Functions

    local KeyGrabber

    KeyGrabber = {
        Utilities = {
            CompareConstants = function(Constants)
                local Matches = {}

                for Index, ConstantMap in next, ConstantMapping do 
                    if ConstantMap.Constants then
                        local Amount = 0 
            
                        for Index, Constant in next, ConstantMap.Constants do 
                            if table.find(Constants, Constant) then 
                                Amount = Amount + 1 
                            end 
                        end
            
                        if Amount == #ConstantMap.Constants then 
                            table.insert(Matches, Index)
                        end
                    end
                end
                
                return #Matches > 0 and Matches or false
            end,

            HookFireServer = function(Function, UpvalueIndex, ConstantMap, ComparedConstants)
                local OldNetwork = debug.getupvalue(Function, UpvalueIndex)

                debug.setupvalue(Function, UpvalueIndex, {
                    FireServer = function(self, Key, ...)
                        debug.setupvalue(Function, UpvalueIndex, OldNetwork)

                        if ConstantMap.RevertFix then 
                            ConstantMap.RevertFix(Function)
                        end
                        
                        Keys[ComparedConstants] = Key
                    end
                })
            end,

            PerformCall = function(Function, ConstantMap)
                if ConstantMap.CustomFix then 
                    ConstantMap.CustomFix(Function)
                end

                if ConstantMap.CustomArguments then
                    Function(unpack(ConstantMap.CustomArguments))
                else 
                    Function()
                end
            end
        },

        GrabMethods = {
            UpvalueScan = function(Value, ConstantMap, ComparedConstants)
                local UpvalueIndex = ConstantMap.UpvalueIndex or 1

                for Index, Upvalue in next, debug.getupvalues(Value) do 
                    if type(Upvalue) == "table" and rawget(Upvalue, "FireServer") then
                        UpvalueIndex = Index
                    end
                end

                KeyGrabber.Utilities.HookFireServer(Value, UpvalueIndex, ConstantMap, ComparedConstants)
                KeyGrabber.Utilities.PerformCall(Value, ConstantMap)
            end,

            NestedUpvalueScan = function(Value, ConstantMap, ComparedConstants)
                local Upvalue = debug.getupvalues(Value)[ConstantMap.UpvalueIndex]

                if type(Upvalue) == "function" then
                    for Index, SecondUpvalue in next, debug.getupvalues(Upvalue) do
                        if type(SecondUpvalue) == "table" and rawget(SecondUpvalue, "FireServer") then 
                            KeyGrabber.Utilities.HookFireServer(Upvalue, Index, ConstantMap, ComparedConstants)
                            KeyGrabber.Utilities.PerformCall(Upvalue, ConstantMap)
                        elseif type(SecondUpvalue) == "function" then 
                            for SecondIndex, ThirdUpvalue in next, debug.getupvalues(SecondUpvalue) do
                                if type(ThirdUpvalue) == "table" and rawget(ThirdUpvalue, "FireServer") then 
                                    KeyGrabber.Utilities.HookFireServer(SecondUpvalue, SecondIndex, ConstantMap, ComparedConstants)
                                    KeyGrabber.Utilities.PerformCall(SecondUpvalue, ConstantMap)
                                end
                            end
                        end
                    end
                end
            end,

            ProtoScan = function(Value, ConstantMap, ComparedConstants)
                local Proto = debug.getproto(Value, ConstantMap.ProtoIndex)

                KeyGrabber.Utilities.HookFireServer(Proto, ConstantMap.UpvalueIndex, ConstantMap, ComparedConstants)
                KeyGrabber.Utilities.PerformCall(Proto, ConstantMap)
            end
        }
    }

    --// Grab Keys With Pre-Located Functions

    for Index, ConstantMap in next, ConstantMapping do 
        local LocatedFunction = ConstantMap.LocatedFunction 

        if LocatedFunction then
            if ConstantMap.ProtoIndex then
                KeyGrabber.GrabMethods.ProtoScan(LocatedFunction, ConstantMap, Index)
            else 
                KeyGrabber.GrabMethods.UpvalueScan(LocatedFunction, ConstantMap, Index)
            end
        end
    end

    -- Main GC Loop to Grab Keys From Non-Located Functions

    for Index, Value in next, getgc() do  
        if islclosure(Value) and not is_synapse_function(Value) then 
            local Constants = debug.getconstants(Value)
            local ComparedConstants = KeyGrabber.Utilities.CompareConstants(Constants)
            
            if ComparedConstants then 
                for Index, ComparedName in next, ComparedConstants do
                    local ConstantMap = ConstantMapping[ComparedName]

                    if ConstantMap.CustomGrab then
                        ConstantMap.CustomGrab(Value)
                    else
                        --// Method 1

                        if not ConstantMap.ProtoIndex and not ConstantMap.UpvalueIndex then
                            KeyGrabber.GrabMethods.UpvalueScan(Value, ConstantMap, ComparedName)
                        end 
                        
                        --// Method 2 

                        if not ConstantMap.ProtoIndex and ConstantMap.UpvalueIndex then
                            KeyGrabber.GrabMethods.NestedUpvalueScan(Value, ConstantMap, ComparedName)
                        end

                        --// Method 3

                        if ConstantMap.ProtoIndex then
                            KeyGrabber.GrabMethods.ProtoScan(Value, ConstantMap, ComparedName)
                        end
                    end
                end
            end
        end 
    end

    --// Output Keys

    for Index, Key in next, Keys do 
        --rconsoleprint(Index .. " : " .. Key .. "\n")
    end

    local LoadedUI = nil

    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "MainHeader" then
            if v.Parent.Name == "Main" then
            LoadedUI = v.Parent
            else
                warn("Script Inproperly Loaded - Some features may not work")
            end
        end
    end

    local MainTab = Window:NewTab("Main")
    local MainSection = MainTab:NewSection("Main")

    _G.aimbot = false

    MainSection:NewToggle("Aimbot", "Toggles Aimbot", function(state)
        if state then
            _G.aimbot = true
        else
            _G.aimbot = false
        end
    end)

    local localPlayer = game:GetService("Players").LocalPlayer

    local function player()
        local target = nil
        local dist = math.huge
        
        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= localPlayer.Name then
                if v.Character and v.Character:FindFirstChild("Head") and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") and v.TeamColor ~= localPlayer.TeamColor then
                    local magnitude = (v.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude

                     if magnitude < dist then
                        target = v
                        dist = magnitude
                     end
                end
            end
        end
        return target
    end


    local camera = game.Workspace.CurrentCamera
    local UIS = game:GetService("UserInputService")
    local aim = false

    game:GetService("RunService").RenderStepped:Connect(function()
        if aim then
            if _G.aimbot == true then
                camera.CFrame = CFrame.new(camera.CFrame.Position,player().Character.Head.Position)
            end
        end
    end)

    UIS.InputBegan:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.MouseButton2 then
            if _G.aimbot == true then
                aim = true
            end
        end
    end)

    UIS.InputEnded:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.MouseButton2 then
            if _G.aimbot == true then
                aim = false
            end
        end
    end)

    MainSection:NewToggle("Auto Pilot", "Toggles Auto Pilot", function(state)
        if state then
            local JBFunctions = {
                CarAction = nil
            }
            
            for I,V in pairs(getgc(true)) do
                if type(V) == "function" and islclosure(V) then
                    for I,V in next, debug.getupvalues(V) do
                        if type(V) == "table" then
                            if rawget(V, "OnAction") then
                                if tostring(getfenv(V.OnAction).script) == "AlexChassis" then
                                    JBFunctions.CarAction = V.OnAction
                                end
                            end
                        end
                    end
                end
            end
            
            debug.setupvalue(JBFunctions.CarAction, 8, true) -- true sets auto pilot on
        else
            local JBFunctions = {
                CarAction = nil
            }
            
            for I,V in pairs(getgc(true)) do
                if type(V) == "function" and islclosure(V) then
                    for I,V in next, debug.getupvalues(V) do
                        if type(V) == "table" then
                            if rawget(V, "OnAction") then
                                if tostring(getfenv(V.OnAction).script) == "AlexChassis" then
                                    JBFunctions.CarAction = V.OnAction
                                end
                            end
                        end
                    end
                end
            end
            
            debug.setupvalue(JBFunctions.CarAction, 8, false) -- true sets auto pilot on
        end
    end)

    MainSection:NewToggle("Open KeyCard Only Doors", "Toggles The Ability To Open KeyCard Only Doors When You Walk Near Them Even Without A KeyCard", function(state)
        if state then
            game:GetService("Players").LocalPlayer.TeamValue.Value = "Police"
        else
            game.Players.LocalPlayer.TeamValue.Value= "Prisoner"
        end
    end)

    MainSection:NewButton("Clear All Doors", "Clears All Doors", function()
        local doors = game:GetService("Workspace"):FindFirstChild("Doors")
        if doors then
            for i,v in pairs(doors:GetChildren()) do
                v:Destroy()
            end
        end 
    end)

    local PlayerTab = Window:NewTab("Player")
    local PlayerSection = PlayerTab:NewSection("Player")

    local gmt = getrawmetatable(game)
    setreadonly(gmt, false)
    local oldindex = gmt.__index
    gmt.__index = newcclosure(function(self, b)
        if b == "WalkSpeed" then
            return 16  
        end
        if b == "JumpPower" then
            return 50  
        end
        return oldindex(self, b)
    end)

    require(game:GetService("ReplicatedStorage").Module.AlexRagdoll).Ragdoll = function() return wait(9e9) end

    PlayerSection:NewSlider("Walkspeed", "Changes Your Walkspeed With A Built In Anti Ragdoll", 100, 16, function(v)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
    end)

    PlayerSection:NewSlider("JumpPower", "Changes Your JumpPower With A Built In Anti Ragdoll", 250, 50, function(v)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
    end)

    local VisualsTab = Window:NewTab("Visuals")
    local VisualsSection = VisualsTab:NewSection("Visuals")

    --// Locals:
    local workspace = game:GetService("Workspace")
    local player = game:GetService("Players").LocalPlayer
    local camera = workspace.CurrentCamera

    --// Settings:
    local on = false -- Use this if your making gui

    local Box_Color = Color3.fromRGB(255, 0, 0)
    local Box_Thickness = 2
    local Box_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Tracers = false
    local Tracer_Color = Color3.fromRGB(255, 0, 0)
    local Tracer_Thickness = 2
    local Tracer_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Autothickness = true -- Makes screen less encumbered

    local Team_Check = false
    local red = Color3.fromRGB(227, 52, 52)
    local blue = Color3.fromRGB(123, 182, 232)
    local orange = Color3.fromRGB(224, 152, 100)

    local function NewLine()
        local line = Drawing.new("Line")
        line.Visible = false
        line.From = Vector2.new(0, 0)
        line.To = Vector2.new(1, 1)
        line.Color = Box_Color
        line.Thickness = Box_Thickness
        line.Transparency = Box_Transparency
        return line
    end

    --// Main Function:
    for i, v in pairs(game.Players:GetChildren()) do
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= player.Name and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = v.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)

                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if v.Team == game:GetService("Teams").Prisoner then
                            for u, x in pairs(lines) do
                                x.Color = orange
                            end
                        elseif v.Team == game:GetService("Teams").Police then
                            for u, x in pairs(lines) do
                                x.Color = blue
                            end
                        elseif v.Team == game:GetService("Teams").Criminal then
                            for u, x in pairs(lines) do
                                x.Color = red
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(v.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end

    game.Players.PlayerAdded:Connect(function(newplr)
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and newplr.Character ~= nil and newplr.Character:FindFirstChild("Humanoid") ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= player.Name and newplr.Character.Humanoid.Health > 0 and newplr.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = newplr.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)
                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if newplr.Team == game:GetService("Teams").Prisoner then
                            for u, x in pairs(lines) do
                                x.Color = orange
                            end
                        elseif newplr.Team == game:GetService("Teams").Police then
                            for u, x in pairs(lines) do
                                x.Color = blue
                            end
                        elseif newplr.Team == game:GetService("Teams").Criminal then
                            for u, x in pairs(lines) do
                                x.Color = red
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - newplr.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(newplr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end)

    VisualsSection:NewToggle("Box ESP", "Toggles Box ESP", function(state)
        if state then
            on = true
        else
            on = false
        end
    end)

    VisualsSection:NewToggle("Tracers", "Toggles Tracers", function(state)
        if state then
            Tracers = true
        else
            Tracers = false
        end
    end)

    local FOV = Drawing.new("Circle")
    FOV.Visible = false
    FOV.Color = Color3.fromRGB(255, 0, 0)
    FOV.Thickness = 2
    FOV.NumSides = 100
    FOV.Radius = 125
    FOV.Filled = false
    FOV.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)

    VisualsSection:NewToggle("FOV Circle", "Toggles FOV Circle", function(state)
        if state then
            FOV.Visible = true
        else
            FOV.Visible = false
        end
    end)

    VisualsSection:NewSlider("Circle Radius", "Changes The Radius Of The FOV Circle", 500, 50, function(v)
        FOV.Radius = v
    end)

    local MiscTab = Window:NewTab("Misc")
    local MiscSection = MiscTab:NewSection("Misc")

    MiscSection:NewKeybind("Toggle UI", "Toggles The UI", Enum.KeyCode.RightShift, function()
        if LoadedUI.Visible == true then
            LoadedUI:TweenPosition(UDim2.new(1.5, 0,0, 1.5))
            wait(1)
            LoadedUI.Visible = false
        else
            LoadedUI.Visible = true
            LoadedUI:TweenPosition(UDim2.new(0, 0, 0, 0))
        end
    end)

    MiscSection:NewButton("Anti Lag Mode", "Enables Anti Lag Mode (This Might Take A Few Seconds To Load)", function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        sethiddenproperty(l,"Technology",2)
        sethiddenproperty(t,"Decoration",false)
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end)

    MiscSection:NewTextBox("Custom Notification", "Enter Text To Display Is As A Notification", function(txt)
        require(game:GetService("ReplicatedStorage").Game.Notification).new({
            Text = txt,
            Duration = 3
        })
    end)
    

    local CreditsTab = Window:NewTab("Credits")
    local CreditsSection = CreditsTab:NewSection("Credits")

    local CreditsDevSection = CreditsTab:NewSection("Created By Cy#0100")
    local CreditsDevSectionW = CreditsTab:NewSection("Whitelist System Created By Boxking776#0001")
    local CreditsDevSectionL = CreditsTab:NewSection("And Peanut")

    CreditsDevSectionL:NewButton("Copy Discord Invite", "Gets the Discord Server Invite", function()
        setclipboard("https://www.discord.gg/UGaYPnZCmv")
    end)


    local function callback(text)
        if text == "Teleport to Bank" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-11.036747, 17.9193821, 797.971521) + Vector3.new(1,0,0)
        elseif text == "Teleport to Jewerly" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(141.502686, 17.8576393, 1343.16345) + Vector3.new(1,0,0)
        end
    end
    local bindableFunction = Instance.new("BindableFunction")
    bindableFunction.OnInvoke = callback
    while true do
        if workspace.Banks.Bank.Extra:FindFirstChild("Sign").Decal.Transparency ~= 0 then
            game.StarterGui:SetCore("SendNotification", {
                    Title = "Future";
                    Text = "The Bank Just Opened";
                    Icon = "";
                    Duration = 6;
                    Callback = bindableFunction;
                    Button1 = "Teleport to Bank";
             })
        end
            wait(5)
        if workspace.Jewelrys.Jewelry.Extra:FindFirstChild("Sign").Decal.Transparency ~= 0 then
            game.StarterGui:SetCore("SendNotification", {
                    Title = "Future Hub";
                    Text = "The Jewerly Store Just Opened";
                    Icon = "";
                    Duration = 6;
                    Callback = bindableFunction;
                    Button1 = "Teleport to Jewerly";
             })
        end
            wait(2)
    end

end

-- Strucid
if game.PlaceId == 2377868063 then

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CyOfficial/KavoLibBackup/main/source"))()

    local Window = Library.CreateLib(title, HubTheme)

    local LoadedUI = nil

    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "MainHeader" then
            if v.Parent.Name == "Main" then
            LoadedUI = v.Parent
            else
                warn("Script Inproperly Loaded - Some features may not work")
            end
        end
    end

    local CombatTab = Window:NewTab("Combat")
    local CombatSection = CombatTab:NewSection("Combat")

    _G.TeamCheck = false

    _G.silentaim = false

    _G.TriggerBot = false

    CombatSection:NewToggle("Silent Aim", "Toggles Silent Aim", function(state)
        if state then
            _G.silentaim = true
        else
            _G.silentaim = false
        end
    end)

    local localPlayer = game:GetService("Players").LocalPlayer
    local currentCamera = game:GetService("Workspace").CurrentCamera
    local mouse = localPlayer:GetMouse()
    local teamCheck = true

    local function getClosestPlayerToCursor()
        if _G.TeamCheck == true then
            teamCheck = true
        else
            teamCheck = false
        end
        local closestPlayer = nil
        local shortestDistance = math.huge
        
        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= localPlayer.Name then
                if v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Head") and teamCheck and v.Team ~= localPlayer.Team then
                    local pos = currentCamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude

                    if magnitude < shortestDistance then
                        closestPlayer = v
                        shortestDistance = magnitude
                    end
                elseif v.Character and v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Head") and not teamCheck then
                    local pos = currentCamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude

                    if magnitude < shortestDistance then
                        closestPlayer = v
                        shortestDistance = magnitude
                    end
                end
            end
        end
        
        return closestPlayer
    end

    local mt = getrawmetatable(game)
    local oldIndex = mt.__index
    local oldNamecall = mt.__namecall
    if setreadonly then setreadonly(mt, false) else make_writeable(mt, true) end
    local nameCallMethod = getnamecallmethod or get_namecall_method
    local newClose = newcclosure or function(f) return f end

    mt.__index = newClose(function(t, k)
        if t == mouse and tostring(k) == "Hit" and getClosestPlayerToCursor() and getClosestPlayerToCursor().Character:FindFirstChild("Head") then
            if _G.silentaim == true then
                return getClosestPlayerToCursor().Character.Head.CFrame
            end
        end

        return oldIndex(t, k)
    end)

    mt.__namecall = newClose(function(...)
        local method = nameCallMethod()
        local args = {...}

        if tostring(method) == "FindPartOnRayWithIgnoreList" and getClosestPlayerToCursor() and getClosestPlayerToCursor().Character then
            return oldNamecall(args[1], args[2], {game:GetService("Workspace").IgnoreThese, game:GetService("Players").LocalPlayer.Character, game:GetService("Workspace").BuildStuff, game:GetService("Workspace").Map})
        end

        return oldNamecall(...)
    end)

    if setreadonly then setreadonly(mt, true) else make_writeable(mt, false) end

    local oldFunc

    oldFunc = hookfunction(workspace.FindPartOnRayWithIgnoreList, function(...)
        local args = {...}

        args[3] = {game:GetService("Workspace").IgnoreThese, game:GetService("Players").LocalPlayer.Character, game:GetService("Workspace").BuildStuff, game:GetService("Workspace").Map}

        return oldFunc(unpack(args))
    end)

    CombatSection:NewToggle("Trigger Bot", "Toggles Trigger Bot", function(state)
        if state then
            _G.TriggerBot = true
        else
            _G.TriggerBot = false
        end
    end)

    local Players = game:GetService('Players')
    local Mouse = Players.LocalPlayer:GetMouse()

    function CheckTarget(MouseTarget)
        for i,v in next, Players:GetPlayers() do
            if v ~= Players.LocalPlayer and MouseTarget.IsDescendantOf(v.Character) then
                mouse1click()
            end
        end
    end

    function triggerbotactive()
        while wait() do
            if _G.TriggerBot == true then
                if Mouse.Target then
                    CheckTarget(Mouse.Target)
                end
            else
                break
            end
        end
    end

    CombatSection:NewToggle("Team Check", "Toggles Team Check", function(state)
        if state then
            _G.TeamCheck = true
        else
            _G.TeamCheck = false
        end
    end)

    local VisualsTab = Window:NewTab("Visuals")
    local VisualsSection = VisualsTab:NewSection("Visuals")

    --// Locals:
    local workspace = game:GetService("Workspace")
    local player = game:GetService("Players").LocalPlayer
    local camera = workspace.CurrentCamera

    --// Settings:
    local on = false -- Use this if your making gui

    local Box_Color = Color3.fromRGB(255, 0, 0)
    local Box_Thickness = 2
    local Box_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Tracers = false
    local Tracer_Color = Color3.fromRGB(255, 0, 0)
    local Tracer_Thickness = 2
    local Tracer_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Autothickness = true -- Makes screen less encumbered

    local Team_Check = true
    local red = Color3.fromRGB(227, 52, 52)
    local green = Color3.fromRGB(88, 217, 24)

    local function NewLine()
        local line = Drawing.new("Line")
        line.Visible = false
        line.From = Vector2.new(0, 0)
        line.To = Vector2.new(1, 1)
        line.Color = Box_Color
        line.Thickness = Box_Thickness
        line.Transparency = Box_Transparency
        return line
    end

    --// Main Function:
    for i, v in pairs(game.Players:GetChildren()) do
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= player.Name and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = v.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)

                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if v.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(v.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end

    game.Players.PlayerAdded:Connect(function(newplr)
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and newplr.Character ~= nil and newplr.Character:FindFirstChild("Humanoid") ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= player.Name and newplr.Character.Humanoid.Health > 0 and newplr.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = newplr.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)
                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if newplr.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - newplr.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(newplr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end)

    VisualsSection:NewToggle("Box ESP", "Toggles Box ESP", function(state)
        if state then
            on = true
        else
            on = false
        end
    end)

    VisualsSection:NewToggle("Tracers", "Toggles Tracers", function(state)
        if state then
            Tracers = true
        else
            Tracers = false
        end
    end)

    local FOV = Drawing.new("Circle")
    FOV.Visible = false
    FOV.Color = Color3.fromRGB(255, 0, 0)
    FOV.Thickness = 2
    FOV.NumSides = 100
    FOV.Radius = 125
    FOV.Filled = false
    FOV.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)

    VisualsSection:NewToggle("FOV Circle", "Toggles FOV Circle", function(state)
        if state then
            FOV.Visible = true
        else
            FOV.Visible = false
        end
    end)

    VisualsSection:NewSlider("Circle Radius", "Changes The Radius Of The FOV Circle", 500, 50, function(v)
        FOV.Radius = v
    end)

    local MiscTab = Window:NewTab("Misc")
    local MiscSection = MiscTab:NewSection("Misc")

    MiscSection:NewKeybind("Toggle UI", "Toggles The UI", Enum.KeyCode.RightShift, function()
        if LoadedUI.Visible == true then
            LoadedUI:TweenPosition(UDim2.new(1.5, 0,0, 1.5))
            wait(1)
            LoadedUI.Visible = false
        else
            LoadedUI.Visible = true
            LoadedUI:TweenPosition(UDim2.new(0, 0, 0, 0))
        end
    end)

    MiscSection:NewButton("Anti Lag Mode", "Enables Anti Lag Mode (This Might Take A Few Seconds To Load)", function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        sethiddenproperty(l,"Technology",2)
        sethiddenproperty(t,"Decoration",false)
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end)

    local CreditsTab = Window:NewTab("Credits")
    local CreditsSection = CreditsTab:NewSection("Credits")

    local CreditsDevSection = CreditsTab:NewSection("Created By Cy#0100")
    local CreditsDevSectionW = CreditsTab:NewSection("Whitelist System Created By Boxking776#0001")
    local CreditsDevSectionL = CreditsTab:NewSection("And Peanut")

    CreditsDevSectionL:NewButton("Copy Discord Invite", "Gets the Discord Server Invite", function()
        setclipboard("https://www.discord.gg/UGaYPnZCmv")
    end)

end

-- The Wild West
if game.PlaceId == 2317712696 then

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CyOfficial/KavoLibBackup/main/source"))()

    local ReplicatedStorage = game:GetService("ReplicatedStorage");

	local ModLoad = require(ReplicatedStorage.Modules.Load);

	local UIHandler = ModLoad("UIHandler")

	UIHandler:GiveNotification({

		text = "Loading Future Hub...",

		textcolor = "Red",

		center = true

	});

    wait(3.3)

    local ReplicatedStorage = game:GetService("ReplicatedStorage");

	local ModLoad = require(ReplicatedStorage.Modules.Load);

	local UIHandler = ModLoad("UIHandler")

	UIHandler:GiveNotification({

		text = "Future Hub Has Loaded!",

		textcolor = "Red",

		center = true

	});

    local Window = Library.CreateLib(title, HubTheme)

    local LoadedUI = nil

    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "MainHeader" then
            if v.Parent.Name == "Main" then
            LoadedUI = v.Parent
            else
                warn("Script Inproperly Loaded - Some features may not work")
            end
        end
    end

    local MainTab = Window:NewTab("Main")
    local MainSection = MainTab:NewSection("Main")

    _G.aimbot = false

    MainSection:NewToggle("Aimbot", "Toggles Aimbot", function(state)
        if state then
            _G.aimbot = true
        else
            _G.aimbot = false
        end
    end)

    local localPlayer = game:GetService("Players").LocalPlayer

    local function player()
        local target = nil
        local dist = math.huge
        
        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= localPlayer.Name then
                if v.Character and v.Character:FindFirstChild("Head") and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") and v.TeamColor ~= localPlayer.TeamColor then
                    local magnitude = (v.Character.HumanoidRootPart.Position - localPlayer.Character.HumanoidRootPart.Position).magnitude

                     if magnitude < dist then
                        target = v
                        dist = magnitude
                     end
                end
            end
        end
        return target
    end


    local camera = game.Workspace.CurrentCamera
    local UIS = game:GetService("UserInputService")
    local aim = false

    game:GetService("RunService").RenderStepped:Connect(function()
        if aim then
            if _G.aimbot == true then
                camera.CFrame = CFrame.new(camera.CFrame.Position,player().Character.Head.Position)
            end
        end
    end)

    UIS.InputBegan:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.MouseButton2 then
            if _G.aimbot == true then
                aim = true
            end
        end
    end)

    UIS.InputEnded:Connect(function(inp)
        if inp.UserInputType == Enum.UserInputType.MouseButton2 then
            if _G.aimbot == true then
                aim = false
            end
        end
    end)

    _G.AnimalHitBoxExtenders = false

    MainSection:NewToggle("Animal HitBox Extenders", "Toggles Animal HitBox extenders", function(state)
        if state then
            _G.AnimalHitBoxExtenders = true
            for i, v in pairs(game.Workspace.WORKSPACE_Entities.Animals:GetChildren()) do
                if v.Name == "Bison" or v.Name == "Deer" or v.Name == "Bear" or v.Name == "Gator" then
                    v.Body.Size = Vector3.new(30,30,30)
                    v.Body.Transparency = 0.5
                end
            end
        else
            _G.AnimalHitBoxExtenders = false
        end
    end)

    MainSection:NewButton("No Recoil", "Enables No Recoil", function()
        for i,v in next, require(game.ReplicatedStorage.Modules.Load.Character.Items.Types.GunItem) do
            if i == "CalculateRecoil" then
                hookfunction(v, function()
                    return 0
                end)
            end
        end
    end)

    MainSection:NewButton("Fast Gun Speed", "Enables Fast Gun Speed", function()
        for i, v in pairs(getgc(true)) do
            if type(v) == "table" and rawget(v, "BaseRecoil") then
                v.FireSpeed = 0
            end
        end
    end)

    MainSection:NewButton("Wallbang", "Enables Wallbang", function()
        for i, v in pairs(getgc(true)) do
            if type(v) == "table" and rawget(v, "BaseRecoil") then
                v.ProjectilePenetration = math.huge
            end
         end
    end)

    local VisualsTab = Window:NewTab("Visuals")
    local VisualsSection = VisualsTab:NewSection("Visuals")

    --// Locals:
    local workspace = game:GetService("Workspace")
    local player = game:GetService("Players").LocalPlayer
    local camera = workspace.CurrentCamera

    --// Settings:
    local on = false -- Use this if your making gui

    local Box_Color = Color3.fromRGB(255, 0, 0)
    local Box_Thickness = 2
    local Box_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Tracers = false
    local Tracer_Color = Color3.fromRGB(255, 0, 0)
    local Tracer_Thickness = 2
    local Tracer_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Autothickness = true -- Makes screen less encumbered

    local Team_Check = true
    local red = Color3.fromRGB(227, 52, 52)
    local green = Color3.fromRGB(88, 217, 24)

    local function NewLine()
        local line = Drawing.new("Line")
        line.Visible = false
        line.From = Vector2.new(0, 0)
        line.To = Vector2.new(1, 1)
        line.Color = Box_Color
        line.Thickness = Box_Thickness
        line.Transparency = Box_Transparency
        return line
    end

    --// Main Function:
    for i, v in pairs(game.Players:GetChildren()) do
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= player.Name and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = v.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)

                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if v.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(v.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end

    game.Players.PlayerAdded:Connect(function(newplr)
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and newplr.Character ~= nil and newplr.Character:FindFirstChild("Humanoid") ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= player.Name and newplr.Character.Humanoid.Health > 0 and newplr.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = newplr.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)
                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if newplr.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - newplr.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(newplr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end)

    VisualsSection:NewToggle("Box ESP", "Toggles Box ESP", function(state)
        if state then
            on = true
        else
            on = false
        end
    end)

    VisualsSection:NewToggle("Tracers", "Toggles Tracers", function(state)
        if state then
            Tracers = true
        else
            Tracers = false
        end
    end)

    _G.characteresp = false

    VisualsSection:NewToggle("Character ESP", "Toggles Charater ESP", function(state)
        if state then
            _G.characteresp = true
            ESP()
        else
            _G.characteresp = false
            for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                local char = v.Character
                for _,p in pairs(char:GetChildren()) do
                    if p:FindFirstChild("chesp") then
                        p.chesp:Destroy()
                    end
                end
            end
        end
    end)

    local color = BrickColor.new(196,40,28)
    local transparency = .8

    local Players = game:GetService("Players")
    local function _ESP(c)
        if _G.characteresp == true then
            repeat wait() until c.PrimaryPart ~= nil
                for i,p in pairs(c:GetChildren()) do
                    if game:GetService("Players"):GetPlayerFromCharacter(c).Team == game:GetService("Teams").Criminals then
                        color = BrickColor.new("Really red")
                    elseif game:GetService("Players"):GetPlayerFromCharacter(c).Team == game:GetService("Teams").Inmates then
                        color = BrickColor.new("Bright orange")
                    elseif game:GetService("Players"):GetPlayerFromCharacter(c).Team == game:GetService("Teams").Guards then
                        color = BrickColor.new("Bright blue")
                    end
                    if p.ClassName == "Part" or p.ClassName == "MeshPart" then
                    if p:FindFirstChild("chesp") then p.chesp:Destroy() end
                    local a = Instance.new("BoxHandleAdornment",p)
                    a.Name = "chesp"
                    a.Size = p.Size
                    a.Color = color
                    a.Transparency = transparency
                    a.AlwaysOnTop = true    
                    a.Visible = true    
                    a.Adornee = p
                    a.ZIndex = true
                end    
            end
        end
    end
    function ESP()
        if _G.characteresp == true then
            for i,v in pairs(Players:GetChildren()) do
                if v ~= game.Players.LocalPlayer then
                    if v.Character then
                        _ESP(v.Character)
                    end
                    v.CharacterAdded:Connect(function(chr)
                    _ESP(chr)
                end)
            end
        end
    end

    Players.PlayerAdded:Connect(function(player)
        if _G.characteresp == true then
                player.CharacterAdded:Connect(function(chr)
                    _ESP(chr)
                end)  
            end
        end)
    end
    ESP()

    local FOV = Drawing.new("Circle")
    FOV.Visible = false
    FOV.Color = Color3.fromRGB(255, 0, 0)
    FOV.Thickness = 2
    FOV.NumSides = 100
    FOV.Radius = 125
    FOV.Filled = false
    FOV.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)

    VisualsSection:NewToggle("FOV Circle", "Toggles FOV Circle", function(state)
        if state then
            FOV.Visible = true
        else
            FOV.Visible = false
        end
    end)

    VisualsSection:NewSlider("Circle Radius", "Changes The Radius Of The FOV Circle", 500, 50, function(v)
        FOV.Radius = v
    end)

    local MiscTab = Window:NewTab("Misc")
    local MiscSection = MiscTab:NewSection("Misc")

    MiscSection:NewKeybind("Toggle UI", "Toggles The UI", Enum.KeyCode.RightShift, function()
        if LoadedUI.Visible == true then
            LoadedUI:TweenPosition(UDim2.new(1.5, 0,0, 1.5))
            wait(1)
            LoadedUI.Visible = false
        else
            LoadedUI.Visible = true
            LoadedUI:TweenPosition(UDim2.new(0, 0, 0, 0))
        end
    end)

    MiscSection:NewButton("Anti Lag Mode", "Enables Anti Lag Mode (This Might Take A Few Seconds To Load)", function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        sethiddenproperty(l,"Technology",2)
        sethiddenproperty(t,"Decoration",false)
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end)

    local CreditsTab = Window:NewTab("Credits")
    local CreditsSection = CreditsTab:NewSection("Credits")

    local CreditsDevSection = CreditsTab:NewSection("Created By Cy#0100")
    local CreditsDevSectionW = CreditsTab:NewSection("Whitelist System Created By Boxking776#0001")
    local CreditsDevSectionL = CreditsTab:NewSection("And Peanut")

    CreditsDevSectionL:NewButton("Copy Discord Invite", "Gets the Discord Server Invite", function()
        setclipboard("https://www.discord.gg/UGaYPnZCmv")
    end)

end

-- Natural Disaster Survival
if game.PlaceId == 189707 then

    _G.AutoWin = false

    _G.InfiniteJump = false

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CyOfficial/KavoLibBackup/main/source"))()

    local Window = Library.CreateLib(title, HubTheme)

    local LoadedUI = nil

    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "MainHeader" then
            if v.Parent.Name == "Main" then
            LoadedUI = v.Parent
            else
                warn("Script Inproperly Loaded - Some features may not work")
            end
        end
    end

    local MainTab = Window:NewTab("Main")
    local MainSection = MainTab:NewSection("Main")

    MainSection:NewToggle("Auto Win", "Toggles Auto Win", function(state)
        if state then
            _G.AutoWin = true
            autowinstart()
        else
            _G.AutoWin = false
        end
    end)

    function autowinstart()
        while true do
            if _G.AutoWin == false then
                break
            else
                wait(5)
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-290, 178, 379)
                game.Players.LocalPlayer.Character.Humanoid.Jump = true
            end
        end
    end

    MainSection:NewButton("Enable The Map Selector", "Enables The Map Selector", function()
        local id = 1195159620
        game:GetObjects('rbxassetid://'..id)[1].Parent=game.Players.LocalPlayer.PlayerGui

        game.Players.LocalPlayer.PlayerGui.NDSMapSelector.Button.LeButton.Disabled = false
    end)

    MainSection:NewButton("Blackhole", "Enables Blackhole, Warning: This Will Destroy The Server", function()
        local UserInputService = game:GetService("UserInputService")
        local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
        local Folder = Instance.new("Folder", game:GetService("Workspace"))
        local Part = Instance.new("Part", Folder)
        local Attachment1 = Instance.new("Attachment", Part)
        Part.Anchored = true
        Part.CanCollide = false
        Part.Transparency = 1
        local Updated = Mouse.Hit + Vector3.new(0, 5, 0)
        local NetworkAccess = coroutine.create(function()
            settings().Physics.AllowSleep = false
            while game:GetService("RunService").RenderStepped:Wait() do
                for _, Players in next, game:GetService("Players"):GetPlayers() do
                    if Players ~= game:GetService("Players").LocalPlayer then
                        Players.MaximumSimulationRadius = 0 
                        sethiddenproperty(Players, "SimulationRadius", 0) 
                    end 
                end
                game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge,math.huge)
                setsimulationradius(math.huge) 
            end 
        end) 
        coroutine.resume(NetworkAccess)
        local function ForcePart(v)
            if v:IsA("Part") and v.Anchored == false and v.Parent:FindFirstChild("Humanoid") == nil and v.Parent:FindFirstChild("Head") == nil and v.Name ~= "Handle" then
                Mouse.TargetFilter = v
                for _, x in next, v:GetChildren() do
                    if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
                        x:Destroy()
                    end
                end
                if v:FindFirstChild("Attachment") then
                    v:FindFirstChild("Attachment"):Destroy()
                end
                if v:FindFirstChild("AlignPosition") then
                    v:FindFirstChild("AlignPosition"):Destroy()
                end
                if v:FindFirstChild("Torque") then
                    v:FindFirstChild("Torque"):Destroy()
                end
                v.CanCollide = false
                local Torque = Instance.new("Torque", v)
                Torque.Torque = Vector3.new(100000, 100000, 100000)
                local AlignPosition = Instance.new("AlignPosition", v)
                local Attachment2 = Instance.new("Attachment", v)
                Torque.Attachment0 = Attachment2
                AlignPosition.MaxForce = 9999999999999999
                AlignPosition.MaxVelocity = math.huge
                AlignPosition.Responsiveness = 200
                AlignPosition.Attachment0 = Attachment2 
                AlignPosition.Attachment1 = Attachment1
            end
        end
        for _, v in next, game:GetService("Workspace"):GetDescendants() do
            ForcePart(v)
        end
        game:GetService("Workspace").DescendantAdded:Connect(function(v)
            ForcePart(v)
        end)
        UserInputService.InputBegan:Connect(function(Key, Chat)
            if Key.KeyCode == Enum.KeyCode.E and not Chat then
            Updated = Mouse.Hit + Vector3.new(0, 5, 0)
            end
        end)
        spawn(function()
            while game:GetService("RunService").RenderStepped:Wait() do
                Attachment1.WorldCFrame = Updated
            end
        end)
    end)

    MainSection:NewButton("Fling All UnAnchored Parts", "Flings All UnAnchored Parts", function()
        for i,v in pairs(workspace:GetDescendants()) do
            game.Players.LocalPlayer.SimulationRadius = math.huge
            game.Players.LocalPlayer.MaximumSimulationRadius = math.huge
            if v.ClassName == "Part" and v.Anchored == false and v:IsDescendantOf(game.Players.LocalPlayer.Character) == false then
                game.Players.LocalPlayer.SimulationRadius = math.huge
                game.Players.LocalPlayer.MaximumSimulationRadius = math.huge
                local BodyPosition = Instance.new("BodyPosition", v)
                BodyPosition.P = 18000
                BodyPosition.Position = Vector3.new(0,50,0)
            end
        end
    end)

    MainSection:NewButton("Bring All UnAnchored Parts", "Brings All UnAnchored Parts", function()
        for i,v in pairs(workspace:GetDescendants()) do
            game.Players.LocalPlayer.SimulationRadius = math.huge
            game.Players.LocalPlayer.MaximumSimulationRadius = math.huge
            if v.ClassName == "Part" and v.Anchored == false and v:IsDescendantOf(game.Players.LocalPlayer.Character) == false then
                game.Players.LocalPlayer.SimulationRadius = math.huge
                game.Players.LocalPlayer.MaximumSimulationRadius = math.huge
                v.CFrame = game.Players.LocalPlayer.Character.Head.CFrame
            end
        end
    end)

    local PlayerTab = Window:NewTab("Player")
    local PlayerSection = PlayerTab:NewSection("Player")

    PlayerSection:NewSlider("WalkSpeed", "Changes Your WalkSpeed", 500, 16, function(v)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
    end)

    PlayerSection:NewSlider("JumpPower", "Changes Your JumpPower", 500, 50, function(v)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
    end)

    PlayerSection:NewButton("No Fall Damage", "Enables No Fall Damage", function()
        while wait(0.01) do
            a = Instance.new("Script", game.Players.LocalPlayer.Character)
            a.Name = "CharacterScript"
            wait(0.02)
            game.Players.LocalPlayer.Character.CharacterScript:Destroy()
        end
    end)

    PlayerSection:NewToggle("Infinite Jump", "Toggles Infinite Jump", function(state)
        if state then
            _G.InfiniteJump = true
        else
            _G.InfiniteJump = false
        end
    end)

    game:GetService("RunService").Stepped:Connect(function()
        if _G.InfiniteJump == true then
            game.Players.LocalPlayer.Character.Humanoid:ChangeState(3)
        end
    end)

    local TeleportsTab = Window:NewTab("Teleports")
    local TeleportsSection = TeleportsTab:NewSection("Teleports")

    TeleportsSection:NewButton("Teleport To The Lobby", "Teleports You To The Lobby", function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-290, 178, 379)
    end)

    TeleportsSection:NewButton("Teleport To The Map", "Teleports You To The Map", function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(106, 46, 3)
    end)

    local ItemsTab = Window:NewTab("Items")
    local ItemsSection = ItemsTab:NewSection("Items")

    ItemsSection:NewButton("Get Green Baloon", "Gets The Green Baloon, May Not Work All The Time", function()
        local found=false
    
        for i,v in pairs(game:GetDescendants()) do
        if found ~= true then
        if v.Name == "GreenBalloon" then
        found=true
        local cln = v:Clone()
        cln.Parent = game.Players.LocalPlayer.Backpack
        end
        end
        end
    end)

    ItemsSection:NewButton("Steal Apple", "Steals The Apple", function()
        local found=false
    
        for i,v in pairs(game:GetDescendants()) do
        if found ~= true then
        if v.Name == "RedApple" then
        found=true
        local cln = v:Clone()
        cln.Parent = game.Players.LocalPlayer.Backpack
        end
        end
        end
    end)

    local MiscTab = Window:NewTab("Misc")
    local MiscSection = MiscTab:NewSection("Misc")

    MiscSection:NewButton("Teleport To China Version", "Teleports You To The China Version Of Natural Disaster Survival", function()
        game:GetService('TeleportService'):Teleport(3696971654)
    end)

    MiscSection:NewKeybind("Toggle UI", "Toggles The UI", Enum.KeyCode.RightShift, function()
        if LoadedUI.Visible == true then
            LoadedUI:TweenPosition(UDim2.new(1.5, 0,0, 1.5))
            wait(1)
            LoadedUI.Visible = false
        else
            LoadedUI.Visible = true
            LoadedUI:TweenPosition(UDim2.new(0, 0, 0, 0))
        end
    end)

    MiscSection:NewButton("Anti Lag Mode", "Enables Anti Lag Mode (This Might Take A Few Seconds To Load)", function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        sethiddenproperty(l,"Technology",2)
        sethiddenproperty(t,"Decoration",false)
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end)

    local CreditsTab = Window:NewTab("Credits")
    local CreditsSection = CreditsTab:NewSection("Credits")

    local CreditsDevSection = CreditsTab:NewSection("Created By Cy#0100")
    local CreditsDevSectionW = CreditsTab:NewSection("Whitelist System Created By Boxking776#0001")
    local CreditsDevSectionL = CreditsTab:NewSection("And Peanut")

    CreditsDevSectionL:NewButton("Copy Discord Invite", "Gets the Discord Server Invite", function()
        setclipboard("https://www.discord.gg/UGaYPnZCmv")
    end)

end

-- [SCP] Site-76: Prison Anomalies
--[[
if game.PlaceId == 3057050847 then

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CyOfficial/KavoLibBackup/main/source"))()

    local Window = Library.CreateLib(title, HubTheme)

    local LoadedUI = nil

    for i,v in pairs(game.CoreGui:GetDescendants()) do
        if v.Name == "MainHeader" then
            if v.Parent.Name == "Main" then
            LoadedUI = v.Parent
            else
                warn("Script Inproperly Loaded - Some features may not work")
            end
        end
    end

    local MainTab = Window:NewTab("Main")
    local MainSection = MainTab:NewSection("Main")

    local VisualsTab = Window:NewTab("Visuals")
    local VisualsSection = VisualsTab:NewSection("Visuals")

    --// Locals:
    local workspace = game:GetService("Workspace")
    local player = game:GetService("Players").LocalPlayer
    local camera = workspace.CurrentCamera

    --// Settings:
    local on = false -- Use this if your making gui

    local Box_Color = Color3.fromRGB(255, 0, 0)
    local Box_Thickness = 2
    local Box_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Tracers = false
    local Tracer_Color = Color3.fromRGB(255, 0, 0)
    local Tracer_Thickness = 2
    local Tracer_Transparency = 1 -- 1 Visible, 0 Not Visible

    local Autothickness = true -- Makes screen less encumbered

    local Team_Check = true
    local red = Color3.fromRGB(227, 52, 52)
    local green = Color3.fromRGB(88, 217, 24)

    local function NewLine()
        local line = Drawing.new("Line")
        line.Visible = false
        line.From = Vector2.new(0, 0)
        line.To = Vector2.new(1, 1)
        line.Color = Box_Color
        line.Thickness = Box_Thickness
        line.Transparency = Box_Transparency
        return line
    end

    --// Main Function:
    for i, v in pairs(game.Players:GetChildren()) do
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= player.Name and v.Character.Humanoid.Health > 0 and v.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = v.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)

                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if v.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(v.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end

    game.Players.PlayerAdded:Connect(function(newplr)
        --// Lines for 3D box (12)
        local lines = {
            line1 = NewLine(),
            line2 = NewLine(),
            line3 = NewLine(),
            line4 = NewLine(),
            line5 = NewLine(),
            line6 = NewLine(),
            line7 = NewLine(),
            line8 = NewLine(),
            line9 = NewLine(),
            line10 = NewLine(),
            line11 = NewLine(),
            line12 = NewLine(),
            Tracer = NewLine()
        }

        lines.Tracer.Color = Tracer_Color
        lines.Tracer.Thickness = Tracer_Thickness
        lines.Tracer.Transparency = Tracer_Transparency

        --// Updates ESP (lines) in render loop
        local function ESP()
            local connection
            connection = game:GetService("RunService").RenderStepped:Connect(function()
                if on and newplr.Character ~= nil and newplr.Character:FindFirstChild("Humanoid") ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= player.Name and newplr.Character.Humanoid.Health > 0 and newplr.Character:FindFirstChild("Head") ~= nil then
                    local pos, vis = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    if vis then
                        local Scale = newplr.Character.Head.Size.Y/2
                        local Size = Vector3.new(2, 3, 1.5) * (Scale * 2) -- Change this for different box size

                        local Top1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, -Size.Z)).p)
                        local Top2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, Size.Z)).p)
                        local Top3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, Size.Z)).p)
                        local Top4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, -Size.Z)).p)

                        local Bottom1 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, -Size.Z)).p)
                        local Bottom2 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, Size.Z)).p)
                        local Bottom3 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, Size.Z)).p)
                        local Bottom4 = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, -Size.Z)).p)

                        --// Top:
                        lines.line1.From = Vector2.new(Top1.X, Top1.Y)
                        lines.line1.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line2.From = Vector2.new(Top2.X, Top2.Y)
                        lines.line2.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line3.From = Vector2.new(Top3.X, Top3.Y)
                        lines.line3.To = Vector2.new(Top4.X, Top4.Y)

                        lines.line4.From = Vector2.new(Top4.X, Top4.Y)
                        lines.line4.To = Vector2.new(Top1.X, Top1.Y)

                        --// Bottom:
                        lines.line5.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line5.To = Vector2.new(Bottom2.X, Bottom2.Y)

                        lines.line6.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line6.To = Vector2.new(Bottom3.X, Bottom3.Y)

                        lines.line7.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line7.To = Vector2.new(Bottom4.X, Bottom4.Y)

                        lines.line8.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line8.To = Vector2.new(Bottom1.X, Bottom1.Y)

                        --//S ides:
                        lines.line9.From = Vector2.new(Bottom1.X, Bottom1.Y)
                        lines.line9.To = Vector2.new(Top1.X, Top1.Y)

                        lines.line10.From = Vector2.new(Bottom2.X, Bottom2.Y)
                        lines.line10.To = Vector2.new(Top2.X, Top2.Y)

                        lines.line11.From = Vector2.new(Bottom3.X, Bottom3.Y)
                        lines.line11.To = Vector2.new(Top3.X, Top3.Y)

                        lines.line12.From = Vector2.new(Bottom4.X, Bottom4.Y)
                        lines.line12.To = Vector2.new(Top4.X, Top4.Y)

                        --// Tracer:
                        if Tracers then
                            local trace = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(0, -Size.Y, 0)).p)
                            lines.Tracer.From = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y)
                            lines.Tracer.To = Vector2.new(trace.X, trace.Y)
                        end

                        --// Teamcheck:
                        if Team_Check then
                            if newplr.TeamColor == player.TeamColor then
                                for u, x in pairs(lines) do
                                    x.Color = green
                                end
                            else 
                                for u, x in pairs(lines) do
                                    x.Color = red
                                end
                            end
                        end

                        --// Autothickness:
                        if Autothickness then
                            local distance = (player.Character.HumanoidRootPart.Position - newplr.Character.HumanoidRootPart.Position).magnitude
                            local value = math.clamp(1/distance*100, 0.1, 4) --0.1 is min thickness, 6 is max
                            for u, x in pairs(lines) do
                                x.Thickness = value
                            end
                        else 
                            for u, x in pairs(lines) do
                                x.Thickness = Box_Thickness
                            end
                        end

                        for u, x in pairs(lines) do
                            if x ~= lines.Tracer then
                                x.Visible = true
                            end
                        end
                        if Tracers then
                            lines.Tracer.Visible = true
                        end
                    else 
                        for u, x in pairs(lines) do
                            x.Visible = false
                        end
                    end
                else 
                    for u, x in pairs(lines) do
                        x.Visible = false
                    end
                    if game.Players:FindFirstChild(newplr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            end)
        end
        coroutine.wrap(ESP)()
    end)

    VisualsSection:NewToggle("Box ESP", "Toggles Box ESP", function(state)
        if state then
            on = true
        else
            on = false
        end
    end)

    VisualsSection:NewToggle("Tracers", "Toggles Tracers", function(state)
        if state then
            Tracers = true
        else
            Tracers = false
        end
    end)

    local MiscTab = Window:NewTab("Misc")
    local MiscSection = MiscTab:NewSection("Misc")

    MiscSection:NewKeybind("Toggle UI", "Toggles The UI", Enum.KeyCode.RightShift, function()
        if LoadedUI.Visible == true then
            LoadedUI:TweenPosition(UDim2.new(1.5, 0,0, 1.5))
            wait(1)
            LoadedUI.Visible = false
        else
            LoadedUI.Visible = true
            LoadedUI:TweenPosition(UDim2.new(0, 0, 0, 0))
        end
    end)

    MiscSection:NewButton("Anti Lag Mode", "Enables Anti Lag Mode (This Might Take A Few Seconds To Load)", function()
        local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        sethiddenproperty(l,"Technology",2)
        sethiddenproperty(t,"Decoration",false)
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end)

    local CreditsTab = Window:NewTab("Credits")
    local CreditsSection = CreditsTab:NewSection("Credits")

    local CreditsDevSection = CreditsTab:NewSection("Created By Cy#0100")
    local CreditsDevSectionW = CreditsTab:NewSection("Whitelist System Created By Boxking776#0001")
    local CreditsDevSectionL = CreditsTab:NewSection("And Peanut")

    CreditsDevSectionL:NewButton("Copy Discord Invite", "Gets the Discord Server Invite", function()
        setclipboard("https://www.discord.gg/UGaYPnZCmv")
    end)

end
--]]